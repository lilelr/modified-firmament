// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages/test_message.proto

#ifndef PROTOBUF_messages_2ftest_5fmessage_2eproto__INCLUDED
#define PROTOBUF_messages_2ftest_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace firmament {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_messages_2ftest_5fmessage_2eproto();
void protobuf_InitDefaults_messages_2ftest_5fmessage_2eproto();
void protobuf_AssignDesc_messages_2ftest_5fmessage_2eproto();
void protobuf_ShutdownFile_messages_2ftest_5fmessage_2eproto();

class TestMessage;

// ===================================================================

class TestMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:firmament.TestMessage) */ {
 public:
  TestMessage();
  virtual ~TestMessage();

  TestMessage(const TestMessage& from);

  inline TestMessage& operator=(const TestMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestMessage& default_instance();

  static const TestMessage* internal_default_instance();

  void Swap(TestMessage* other);

  // implements Message ----------------------------------------------

  inline TestMessage* New() const { return New(NULL); }

  TestMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TestMessage& from);
  void MergeFrom(const TestMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TestMessage* other);
  void UnsafeMergeFrom(const TestMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 test = 1;
  void clear_test();
  static const int kTestFieldNumber = 1;
  ::google::protobuf::int64 test() const;
  void set_test(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:firmament.TestMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 test_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_messages_2ftest_5fmessage_2eproto_impl();
  friend void  protobuf_AddDesc_messages_2ftest_5fmessage_2eproto_impl();
  friend void protobuf_AssignDesc_messages_2ftest_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_messages_2ftest_5fmessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TestMessage> TestMessage_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TestMessage

// optional int64 test = 1;
inline void TestMessage::clear_test() {
  test_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TestMessage::test() const {
  // @@protoc_insertion_point(field_get:firmament.TestMessage.test)
  return test_;
}
inline void TestMessage::set_test(::google::protobuf::int64 value) {
  
  test_ = value;
  // @@protoc_insertion_point(field_set:firmament.TestMessage.test)
}

inline const TestMessage* TestMessage::internal_default_instance() {
  return &TestMessage_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace firmament

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_messages_2ftest_5fmessage_2eproto__INCLUDED
