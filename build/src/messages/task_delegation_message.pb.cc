// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages/task_delegation_message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "messages/task_delegation_message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace firmament {

namespace {

const ::google::protobuf::Descriptor* TaskDelegationRequestMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TaskDelegationRequestMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* TaskDelegationResponseMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TaskDelegationResponseMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_messages_2ftask_5fdelegation_5fmessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_messages_2ftask_5fdelegation_5fmessage_2eproto() {
  protobuf_AddDesc_messages_2ftask_5fdelegation_5fmessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "messages/task_delegation_message.proto");
  GOOGLE_CHECK(file != NULL);
  TaskDelegationRequestMessage_descriptor_ = file->message_type(0);
  static const int TaskDelegationRequestMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskDelegationRequestMessage, task_descriptor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskDelegationRequestMessage, target_resource_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskDelegationRequestMessage, delegating_resource_id_),
  };
  TaskDelegationRequestMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TaskDelegationRequestMessage_descriptor_,
      TaskDelegationRequestMessage::internal_default_instance(),
      TaskDelegationRequestMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(TaskDelegationRequestMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskDelegationRequestMessage, _internal_metadata_));
  TaskDelegationResponseMessage_descriptor_ = file->message_type(1);
  static const int TaskDelegationResponseMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskDelegationResponseMessage, task_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskDelegationResponseMessage, success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskDelegationResponseMessage, target_resource_id_),
  };
  TaskDelegationResponseMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TaskDelegationResponseMessage_descriptor_,
      TaskDelegationResponseMessage::internal_default_instance(),
      TaskDelegationResponseMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(TaskDelegationResponseMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskDelegationResponseMessage, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_messages_2ftask_5fdelegation_5fmessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TaskDelegationRequestMessage_descriptor_, TaskDelegationRequestMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TaskDelegationResponseMessage_descriptor_, TaskDelegationResponseMessage::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_messages_2ftask_5fdelegation_5fmessage_2eproto() {
  TaskDelegationRequestMessage_default_instance_.Shutdown();
  delete TaskDelegationRequestMessage_reflection_;
  TaskDelegationResponseMessage_default_instance_.Shutdown();
  delete TaskDelegationResponseMessage_reflection_;
}

void protobuf_InitDefaults_messages_2ftask_5fdelegation_5fmessage_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::firmament::protobuf_InitDefaults_base_2ftask_5fdesc_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  TaskDelegationRequestMessage_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TaskDelegationResponseMessage_default_instance_.DefaultConstruct();
  TaskDelegationRequestMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  TaskDelegationResponseMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_messages_2ftask_5fdelegation_5fmessage_2eproto_once_);
void protobuf_InitDefaults_messages_2ftask_5fdelegation_5fmessage_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_messages_2ftask_5fdelegation_5fmessage_2eproto_once_,
                 &protobuf_InitDefaults_messages_2ftask_5fdelegation_5fmessage_2eproto_impl);
}
void protobuf_AddDesc_messages_2ftask_5fdelegation_5fmessage_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_messages_2ftask_5fdelegation_5fmessage_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n&messages/task_delegation_message.proto"
    "\022\tfirmament\032\024base/task_desc.proto\"\216\001\n\034Ta"
    "skDelegationRequestMessage\0222\n\017task_descr"
    "iptor\030\002 \001(\0132\031.firmament.TaskDescriptor\022\032"
    "\n\022target_resource_id\030\001 \001(\t\022\036\n\026delegating"
    "_resource_id\030\003 \001(\t\"]\n\035TaskDelegationResp"
    "onseMessage\022\017\n\007task_id\030\001 \001(\004\022\017\n\007success\030"
    "\002 \001(\010\022\032\n\022target_resource_id\030\003 \001(\tb\006proto"
    "3", 321);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages/task_delegation_message.proto", &protobuf_RegisterTypes);
  ::firmament::protobuf_AddDesc_base_2ftask_5fdesc_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_messages_2ftask_5fdelegation_5fmessage_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_messages_2ftask_5fdelegation_5fmessage_2eproto_once_);
void protobuf_AddDesc_messages_2ftask_5fdelegation_5fmessage_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_messages_2ftask_5fdelegation_5fmessage_2eproto_once_,
                 &protobuf_AddDesc_messages_2ftask_5fdelegation_5fmessage_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_messages_2ftask_5fdelegation_5fmessage_2eproto {
  StaticDescriptorInitializer_messages_2ftask_5fdelegation_5fmessage_2eproto() {
    protobuf_AddDesc_messages_2ftask_5fdelegation_5fmessage_2eproto();
  }
} static_descriptor_initializer_messages_2ftask_5fdelegation_5fmessage_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskDelegationRequestMessage::kTaskDescriptorFieldNumber;
const int TaskDelegationRequestMessage::kTargetResourceIdFieldNumber;
const int TaskDelegationRequestMessage::kDelegatingResourceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskDelegationRequestMessage::TaskDelegationRequestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_messages_2ftask_5fdelegation_5fmessage_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:firmament.TaskDelegationRequestMessage)
}

void TaskDelegationRequestMessage::InitAsDefaultInstance() {
  task_descriptor_ = const_cast< ::firmament::TaskDescriptor*>(
      ::firmament::TaskDescriptor::internal_default_instance());
}

TaskDelegationRequestMessage::TaskDelegationRequestMessage(const TaskDelegationRequestMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:firmament.TaskDelegationRequestMessage)
}

void TaskDelegationRequestMessage::SharedCtor() {
  target_resource_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  delegating_resource_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_descriptor_ = NULL;
  _cached_size_ = 0;
}

TaskDelegationRequestMessage::~TaskDelegationRequestMessage() {
  // @@protoc_insertion_point(destructor:firmament.TaskDelegationRequestMessage)
  SharedDtor();
}

void TaskDelegationRequestMessage::SharedDtor() {
  target_resource_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  delegating_resource_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &TaskDelegationRequestMessage_default_instance_.get()) {
    delete task_descriptor_;
  }
}

void TaskDelegationRequestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskDelegationRequestMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskDelegationRequestMessage_descriptor_;
}

const TaskDelegationRequestMessage& TaskDelegationRequestMessage::default_instance() {
  protobuf_InitDefaults_messages_2ftask_5fdelegation_5fmessage_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TaskDelegationRequestMessage> TaskDelegationRequestMessage_default_instance_;

TaskDelegationRequestMessage* TaskDelegationRequestMessage::New(::google::protobuf::Arena* arena) const {
  TaskDelegationRequestMessage* n = new TaskDelegationRequestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskDelegationRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:firmament.TaskDelegationRequestMessage)
  if (GetArenaNoVirtual() == NULL && task_descriptor_ != NULL) delete task_descriptor_;
  task_descriptor_ = NULL;
  target_resource_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  delegating_resource_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TaskDelegationRequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:firmament.TaskDelegationRequestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string target_resource_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_resource_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_resource_id().data(), this->target_resource_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "firmament.TaskDelegationRequestMessage.target_resource_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_task_descriptor;
        break;
      }

      // optional .firmament.TaskDescriptor task_descriptor = 2;
      case 2: {
        if (tag == 18) {
         parse_task_descriptor:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_task_descriptor()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_delegating_resource_id;
        break;
      }

      // optional string delegating_resource_id = 3;
      case 3: {
        if (tag == 26) {
         parse_delegating_resource_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_delegating_resource_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->delegating_resource_id().data(), this->delegating_resource_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "firmament.TaskDelegationRequestMessage.delegating_resource_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:firmament.TaskDelegationRequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:firmament.TaskDelegationRequestMessage)
  return false;
#undef DO_
}

void TaskDelegationRequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:firmament.TaskDelegationRequestMessage)
  // optional string target_resource_id = 1;
  if (this->target_resource_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_resource_id().data(), this->target_resource_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "firmament.TaskDelegationRequestMessage.target_resource_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->target_resource_id(), output);
  }

  // optional .firmament.TaskDescriptor task_descriptor = 2;
  if (this->has_task_descriptor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->task_descriptor_, output);
  }

  // optional string delegating_resource_id = 3;
  if (this->delegating_resource_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->delegating_resource_id().data(), this->delegating_resource_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "firmament.TaskDelegationRequestMessage.delegating_resource_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->delegating_resource_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:firmament.TaskDelegationRequestMessage)
}

::google::protobuf::uint8* TaskDelegationRequestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:firmament.TaskDelegationRequestMessage)
  // optional string target_resource_id = 1;
  if (this->target_resource_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_resource_id().data(), this->target_resource_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "firmament.TaskDelegationRequestMessage.target_resource_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->target_resource_id(), target);
  }

  // optional .firmament.TaskDescriptor task_descriptor = 2;
  if (this->has_task_descriptor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->task_descriptor_, false, target);
  }

  // optional string delegating_resource_id = 3;
  if (this->delegating_resource_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->delegating_resource_id().data(), this->delegating_resource_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "firmament.TaskDelegationRequestMessage.delegating_resource_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->delegating_resource_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:firmament.TaskDelegationRequestMessage)
  return target;
}

size_t TaskDelegationRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:firmament.TaskDelegationRequestMessage)
  size_t total_size = 0;

  // optional .firmament.TaskDescriptor task_descriptor = 2;
  if (this->has_task_descriptor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->task_descriptor_);
  }

  // optional string target_resource_id = 1;
  if (this->target_resource_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_resource_id());
  }

  // optional string delegating_resource_id = 3;
  if (this->delegating_resource_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->delegating_resource_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskDelegationRequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:firmament.TaskDelegationRequestMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TaskDelegationRequestMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskDelegationRequestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:firmament.TaskDelegationRequestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:firmament.TaskDelegationRequestMessage)
    UnsafeMergeFrom(*source);
  }
}

void TaskDelegationRequestMessage::MergeFrom(const TaskDelegationRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:firmament.TaskDelegationRequestMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TaskDelegationRequestMessage::UnsafeMergeFrom(const TaskDelegationRequestMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_task_descriptor()) {
    mutable_task_descriptor()->::firmament::TaskDescriptor::MergeFrom(from.task_descriptor());
  }
  if (from.target_resource_id().size() > 0) {

    target_resource_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_resource_id_);
  }
  if (from.delegating_resource_id().size() > 0) {

    delegating_resource_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.delegating_resource_id_);
  }
}

void TaskDelegationRequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:firmament.TaskDelegationRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskDelegationRequestMessage::CopyFrom(const TaskDelegationRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:firmament.TaskDelegationRequestMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TaskDelegationRequestMessage::IsInitialized() const {

  return true;
}

void TaskDelegationRequestMessage::Swap(TaskDelegationRequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskDelegationRequestMessage::InternalSwap(TaskDelegationRequestMessage* other) {
  std::swap(task_descriptor_, other->task_descriptor_);
  target_resource_id_.Swap(&other->target_resource_id_);
  delegating_resource_id_.Swap(&other->delegating_resource_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskDelegationRequestMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TaskDelegationRequestMessage_descriptor_;
  metadata.reflection = TaskDelegationRequestMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TaskDelegationRequestMessage

// optional .firmament.TaskDescriptor task_descriptor = 2;
bool TaskDelegationRequestMessage::has_task_descriptor() const {
  return this != internal_default_instance() && task_descriptor_ != NULL;
}
void TaskDelegationRequestMessage::clear_task_descriptor() {
  if (GetArenaNoVirtual() == NULL && task_descriptor_ != NULL) delete task_descriptor_;
  task_descriptor_ = NULL;
}
const ::firmament::TaskDescriptor& TaskDelegationRequestMessage::task_descriptor() const {
  // @@protoc_insertion_point(field_get:firmament.TaskDelegationRequestMessage.task_descriptor)
  return task_descriptor_ != NULL ? *task_descriptor_
                         : *::firmament::TaskDescriptor::internal_default_instance();
}
::firmament::TaskDescriptor* TaskDelegationRequestMessage::mutable_task_descriptor() {
  
  if (task_descriptor_ == NULL) {
    task_descriptor_ = new ::firmament::TaskDescriptor;
  }
  // @@protoc_insertion_point(field_mutable:firmament.TaskDelegationRequestMessage.task_descriptor)
  return task_descriptor_;
}
::firmament::TaskDescriptor* TaskDelegationRequestMessage::release_task_descriptor() {
  // @@protoc_insertion_point(field_release:firmament.TaskDelegationRequestMessage.task_descriptor)
  
  ::firmament::TaskDescriptor* temp = task_descriptor_;
  task_descriptor_ = NULL;
  return temp;
}
void TaskDelegationRequestMessage::set_allocated_task_descriptor(::firmament::TaskDescriptor* task_descriptor) {
  delete task_descriptor_;
  task_descriptor_ = task_descriptor;
  if (task_descriptor) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:firmament.TaskDelegationRequestMessage.task_descriptor)
}

// optional string target_resource_id = 1;
void TaskDelegationRequestMessage::clear_target_resource_id() {
  target_resource_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TaskDelegationRequestMessage::target_resource_id() const {
  // @@protoc_insertion_point(field_get:firmament.TaskDelegationRequestMessage.target_resource_id)
  return target_resource_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TaskDelegationRequestMessage::set_target_resource_id(const ::std::string& value) {
  
  target_resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:firmament.TaskDelegationRequestMessage.target_resource_id)
}
void TaskDelegationRequestMessage::set_target_resource_id(const char* value) {
  
  target_resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:firmament.TaskDelegationRequestMessage.target_resource_id)
}
void TaskDelegationRequestMessage::set_target_resource_id(const char* value, size_t size) {
  
  target_resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:firmament.TaskDelegationRequestMessage.target_resource_id)
}
::std::string* TaskDelegationRequestMessage::mutable_target_resource_id() {
  
  // @@protoc_insertion_point(field_mutable:firmament.TaskDelegationRequestMessage.target_resource_id)
  return target_resource_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TaskDelegationRequestMessage::release_target_resource_id() {
  // @@protoc_insertion_point(field_release:firmament.TaskDelegationRequestMessage.target_resource_id)
  
  return target_resource_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TaskDelegationRequestMessage::set_allocated_target_resource_id(::std::string* target_resource_id) {
  if (target_resource_id != NULL) {
    
  } else {
    
  }
  target_resource_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_resource_id);
  // @@protoc_insertion_point(field_set_allocated:firmament.TaskDelegationRequestMessage.target_resource_id)
}

// optional string delegating_resource_id = 3;
void TaskDelegationRequestMessage::clear_delegating_resource_id() {
  delegating_resource_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TaskDelegationRequestMessage::delegating_resource_id() const {
  // @@protoc_insertion_point(field_get:firmament.TaskDelegationRequestMessage.delegating_resource_id)
  return delegating_resource_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TaskDelegationRequestMessage::set_delegating_resource_id(const ::std::string& value) {
  
  delegating_resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:firmament.TaskDelegationRequestMessage.delegating_resource_id)
}
void TaskDelegationRequestMessage::set_delegating_resource_id(const char* value) {
  
  delegating_resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:firmament.TaskDelegationRequestMessage.delegating_resource_id)
}
void TaskDelegationRequestMessage::set_delegating_resource_id(const char* value, size_t size) {
  
  delegating_resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:firmament.TaskDelegationRequestMessage.delegating_resource_id)
}
::std::string* TaskDelegationRequestMessage::mutable_delegating_resource_id() {
  
  // @@protoc_insertion_point(field_mutable:firmament.TaskDelegationRequestMessage.delegating_resource_id)
  return delegating_resource_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TaskDelegationRequestMessage::release_delegating_resource_id() {
  // @@protoc_insertion_point(field_release:firmament.TaskDelegationRequestMessage.delegating_resource_id)
  
  return delegating_resource_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TaskDelegationRequestMessage::set_allocated_delegating_resource_id(::std::string* delegating_resource_id) {
  if (delegating_resource_id != NULL) {
    
  } else {
    
  }
  delegating_resource_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), delegating_resource_id);
  // @@protoc_insertion_point(field_set_allocated:firmament.TaskDelegationRequestMessage.delegating_resource_id)
}

inline const TaskDelegationRequestMessage* TaskDelegationRequestMessage::internal_default_instance() {
  return &TaskDelegationRequestMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskDelegationResponseMessage::kTaskIdFieldNumber;
const int TaskDelegationResponseMessage::kSuccessFieldNumber;
const int TaskDelegationResponseMessage::kTargetResourceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskDelegationResponseMessage::TaskDelegationResponseMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_messages_2ftask_5fdelegation_5fmessage_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:firmament.TaskDelegationResponseMessage)
}

void TaskDelegationResponseMessage::InitAsDefaultInstance() {
}

TaskDelegationResponseMessage::TaskDelegationResponseMessage(const TaskDelegationResponseMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:firmament.TaskDelegationResponseMessage)
}

void TaskDelegationResponseMessage::SharedCtor() {
  target_resource_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&task_id_, 0, reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&task_id_) + sizeof(success_));
  _cached_size_ = 0;
}

TaskDelegationResponseMessage::~TaskDelegationResponseMessage() {
  // @@protoc_insertion_point(destructor:firmament.TaskDelegationResponseMessage)
  SharedDtor();
}

void TaskDelegationResponseMessage::SharedDtor() {
  target_resource_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TaskDelegationResponseMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskDelegationResponseMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskDelegationResponseMessage_descriptor_;
}

const TaskDelegationResponseMessage& TaskDelegationResponseMessage::default_instance() {
  protobuf_InitDefaults_messages_2ftask_5fdelegation_5fmessage_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TaskDelegationResponseMessage> TaskDelegationResponseMessage_default_instance_;

TaskDelegationResponseMessage* TaskDelegationResponseMessage::New(::google::protobuf::Arena* arena) const {
  TaskDelegationResponseMessage* n = new TaskDelegationResponseMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskDelegationResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:firmament.TaskDelegationResponseMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TaskDelegationResponseMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TaskDelegationResponseMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(task_id_, success_);
  target_resource_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool TaskDelegationResponseMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:firmament.TaskDelegationResponseMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 task_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &task_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_success;
        break;
      }

      // optional bool success = 2;
      case 2: {
        if (tag == 16) {
         parse_success:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_target_resource_id;
        break;
      }

      // optional string target_resource_id = 3;
      case 3: {
        if (tag == 26) {
         parse_target_resource_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_resource_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_resource_id().data(), this->target_resource_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "firmament.TaskDelegationResponseMessage.target_resource_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:firmament.TaskDelegationResponseMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:firmament.TaskDelegationResponseMessage)
  return false;
#undef DO_
}

void TaskDelegationResponseMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:firmament.TaskDelegationResponseMessage)
  // optional uint64 task_id = 1;
  if (this->task_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->task_id(), output);
  }

  // optional bool success = 2;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->success(), output);
  }

  // optional string target_resource_id = 3;
  if (this->target_resource_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_resource_id().data(), this->target_resource_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "firmament.TaskDelegationResponseMessage.target_resource_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->target_resource_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:firmament.TaskDelegationResponseMessage)
}

::google::protobuf::uint8* TaskDelegationResponseMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:firmament.TaskDelegationResponseMessage)
  // optional uint64 task_id = 1;
  if (this->task_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->task_id(), target);
  }

  // optional bool success = 2;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->success(), target);
  }

  // optional string target_resource_id = 3;
  if (this->target_resource_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_resource_id().data(), this->target_resource_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "firmament.TaskDelegationResponseMessage.target_resource_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->target_resource_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:firmament.TaskDelegationResponseMessage)
  return target;
}

size_t TaskDelegationResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:firmament.TaskDelegationResponseMessage)
  size_t total_size = 0;

  // optional uint64 task_id = 1;
  if (this->task_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->task_id());
  }

  // optional bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  // optional string target_resource_id = 3;
  if (this->target_resource_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_resource_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskDelegationResponseMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:firmament.TaskDelegationResponseMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TaskDelegationResponseMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskDelegationResponseMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:firmament.TaskDelegationResponseMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:firmament.TaskDelegationResponseMessage)
    UnsafeMergeFrom(*source);
  }
}

void TaskDelegationResponseMessage::MergeFrom(const TaskDelegationResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:firmament.TaskDelegationResponseMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TaskDelegationResponseMessage::UnsafeMergeFrom(const TaskDelegationResponseMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.task_id() != 0) {
    set_task_id(from.task_id());
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
  if (from.target_resource_id().size() > 0) {

    target_resource_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_resource_id_);
  }
}

void TaskDelegationResponseMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:firmament.TaskDelegationResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskDelegationResponseMessage::CopyFrom(const TaskDelegationResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:firmament.TaskDelegationResponseMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TaskDelegationResponseMessage::IsInitialized() const {

  return true;
}

void TaskDelegationResponseMessage::Swap(TaskDelegationResponseMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskDelegationResponseMessage::InternalSwap(TaskDelegationResponseMessage* other) {
  std::swap(task_id_, other->task_id_);
  std::swap(success_, other->success_);
  target_resource_id_.Swap(&other->target_resource_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskDelegationResponseMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TaskDelegationResponseMessage_descriptor_;
  metadata.reflection = TaskDelegationResponseMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TaskDelegationResponseMessage

// optional uint64 task_id = 1;
void TaskDelegationResponseMessage::clear_task_id() {
  task_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TaskDelegationResponseMessage::task_id() const {
  // @@protoc_insertion_point(field_get:firmament.TaskDelegationResponseMessage.task_id)
  return task_id_;
}
void TaskDelegationResponseMessage::set_task_id(::google::protobuf::uint64 value) {
  
  task_id_ = value;
  // @@protoc_insertion_point(field_set:firmament.TaskDelegationResponseMessage.task_id)
}

// optional bool success = 2;
void TaskDelegationResponseMessage::clear_success() {
  success_ = false;
}
bool TaskDelegationResponseMessage::success() const {
  // @@protoc_insertion_point(field_get:firmament.TaskDelegationResponseMessage.success)
  return success_;
}
void TaskDelegationResponseMessage::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:firmament.TaskDelegationResponseMessage.success)
}

// optional string target_resource_id = 3;
void TaskDelegationResponseMessage::clear_target_resource_id() {
  target_resource_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TaskDelegationResponseMessage::target_resource_id() const {
  // @@protoc_insertion_point(field_get:firmament.TaskDelegationResponseMessage.target_resource_id)
  return target_resource_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TaskDelegationResponseMessage::set_target_resource_id(const ::std::string& value) {
  
  target_resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:firmament.TaskDelegationResponseMessage.target_resource_id)
}
void TaskDelegationResponseMessage::set_target_resource_id(const char* value) {
  
  target_resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:firmament.TaskDelegationResponseMessage.target_resource_id)
}
void TaskDelegationResponseMessage::set_target_resource_id(const char* value, size_t size) {
  
  target_resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:firmament.TaskDelegationResponseMessage.target_resource_id)
}
::std::string* TaskDelegationResponseMessage::mutable_target_resource_id() {
  
  // @@protoc_insertion_point(field_mutable:firmament.TaskDelegationResponseMessage.target_resource_id)
  return target_resource_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TaskDelegationResponseMessage::release_target_resource_id() {
  // @@protoc_insertion_point(field_release:firmament.TaskDelegationResponseMessage.target_resource_id)
  
  return target_resource_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TaskDelegationResponseMessage::set_allocated_target_resource_id(::std::string* target_resource_id) {
  if (target_resource_id != NULL) {
    
  } else {
    
  }
  target_resource_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_resource_id);
  // @@protoc_insertion_point(field_set_allocated:firmament.TaskDelegationResponseMessage.target_resource_id)
}

inline const TaskDelegationResponseMessage* TaskDelegationResponseMessage::internal_default_instance() {
  return &TaskDelegationResponseMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace firmament

// @@protoc_insertion_point(global_scope)
