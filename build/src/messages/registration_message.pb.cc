// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages/registration_message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "messages/registration_message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace firmament {

namespace {

const ::google::protobuf::Descriptor* RegistrationMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegistrationMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_messages_2fregistration_5fmessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_messages_2fregistration_5fmessage_2eproto() {
  protobuf_AddDesc_messages_2fregistration_5fmessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "messages/registration_message.proto");
  GOOGLE_CHECK(file != NULL);
  RegistrationMessage_descriptor_ = file->message_type(0);
  static const int RegistrationMessage_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistrationMessage, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistrationMessage, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistrationMessage, res_desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistrationMessage, rtn_desc_),
  };
  RegistrationMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RegistrationMessage_descriptor_,
      RegistrationMessage::internal_default_instance(),
      RegistrationMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(RegistrationMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistrationMessage, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_messages_2fregistration_5fmessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RegistrationMessage_descriptor_, RegistrationMessage::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_messages_2fregistration_5fmessage_2eproto() {
  RegistrationMessage_default_instance_.Shutdown();
  delete RegistrationMessage_reflection_;
}

void protobuf_InitDefaults_messages_2fregistration_5fmessage_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::firmament::protobuf_InitDefaults_base_2fresource_5fdesc_2eproto();
  ::firmament::protobuf_InitDefaults_base_2fresource_5ftopology_5fnode_5fdesc_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  RegistrationMessage_default_instance_.DefaultConstruct();
  RegistrationMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_messages_2fregistration_5fmessage_2eproto_once_);
void protobuf_InitDefaults_messages_2fregistration_5fmessage_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_messages_2fregistration_5fmessage_2eproto_once_,
                 &protobuf_InitDefaults_messages_2fregistration_5fmessage_2eproto_impl);
}
void protobuf_AddDesc_messages_2fregistration_5fmessage_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_messages_2fregistration_5fmessage_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n#messages/registration_message.proto\022\tf"
    "irmament\032\030base/resource_desc.proto\032&base"
    "/resource_topology_node_desc.proto\"\243\001\n\023R"
    "egistrationMessage\022\014\n\004uuid\030\001 \001(\t\022\020\n\010loca"
    "tion\030\002 \001(\t\022/\n\010res_desc\030\003 \001(\0132\035.firmament"
    ".ResourceDescriptor\022;\n\010rtn_desc\030\004 \001(\0132)."
    "firmament.ResourceTopologyNodeDescriptor"
    "b\006proto3", 288);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages/registration_message.proto", &protobuf_RegisterTypes);
  ::firmament::protobuf_AddDesc_base_2fresource_5fdesc_2eproto();
  ::firmament::protobuf_AddDesc_base_2fresource_5ftopology_5fnode_5fdesc_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_messages_2fregistration_5fmessage_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_messages_2fregistration_5fmessage_2eproto_once_);
void protobuf_AddDesc_messages_2fregistration_5fmessage_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_messages_2fregistration_5fmessage_2eproto_once_,
                 &protobuf_AddDesc_messages_2fregistration_5fmessage_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_messages_2fregistration_5fmessage_2eproto {
  StaticDescriptorInitializer_messages_2fregistration_5fmessage_2eproto() {
    protobuf_AddDesc_messages_2fregistration_5fmessage_2eproto();
  }
} static_descriptor_initializer_messages_2fregistration_5fmessage_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegistrationMessage::kUuidFieldNumber;
const int RegistrationMessage::kLocationFieldNumber;
const int RegistrationMessage::kResDescFieldNumber;
const int RegistrationMessage::kRtnDescFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegistrationMessage::RegistrationMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_messages_2fregistration_5fmessage_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:firmament.RegistrationMessage)
}

void RegistrationMessage::InitAsDefaultInstance() {
  res_desc_ = const_cast< ::firmament::ResourceDescriptor*>(
      ::firmament::ResourceDescriptor::internal_default_instance());
  rtn_desc_ = const_cast< ::firmament::ResourceTopologyNodeDescriptor*>(
      ::firmament::ResourceTopologyNodeDescriptor::internal_default_instance());
}

RegistrationMessage::RegistrationMessage(const RegistrationMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:firmament.RegistrationMessage)
}

void RegistrationMessage::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  res_desc_ = NULL;
  rtn_desc_ = NULL;
  _cached_size_ = 0;
}

RegistrationMessage::~RegistrationMessage() {
  // @@protoc_insertion_point(destructor:firmament.RegistrationMessage)
  SharedDtor();
}

void RegistrationMessage::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &RegistrationMessage_default_instance_.get()) {
    delete res_desc_;
    delete rtn_desc_;
  }
}

void RegistrationMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegistrationMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegistrationMessage_descriptor_;
}

const RegistrationMessage& RegistrationMessage::default_instance() {
  protobuf_InitDefaults_messages_2fregistration_5fmessage_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RegistrationMessage> RegistrationMessage_default_instance_;

RegistrationMessage* RegistrationMessage::New(::google::protobuf::Arena* arena) const {
  RegistrationMessage* n = new RegistrationMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegistrationMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:firmament.RegistrationMessage)
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && res_desc_ != NULL) delete res_desc_;
  res_desc_ = NULL;
  if (GetArenaNoVirtual() == NULL && rtn_desc_ != NULL) delete rtn_desc_;
  rtn_desc_ = NULL;
}

bool RegistrationMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:firmament.RegistrationMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string uuid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), this->uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "firmament.RegistrationMessage.uuid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_location;
        break;
      }

      // optional string location = 2;
      case 2: {
        if (tag == 18) {
         parse_location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location().data(), this->location().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "firmament.RegistrationMessage.location"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_res_desc;
        break;
      }

      // optional .firmament.ResourceDescriptor res_desc = 3;
      case 3: {
        if (tag == 26) {
         parse_res_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_res_desc()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_rtn_desc;
        break;
      }

      // optional .firmament.ResourceTopologyNodeDescriptor rtn_desc = 4;
      case 4: {
        if (tag == 34) {
         parse_rtn_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rtn_desc()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:firmament.RegistrationMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:firmament.RegistrationMessage)
  return false;
#undef DO_
}

void RegistrationMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:firmament.RegistrationMessage)
  // optional string uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), this->uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "firmament.RegistrationMessage.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uuid(), output);
  }

  // optional string location = 2;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "firmament.RegistrationMessage.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->location(), output);
  }

  // optional .firmament.ResourceDescriptor res_desc = 3;
  if (this->has_res_desc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->res_desc_, output);
  }

  // optional .firmament.ResourceTopologyNodeDescriptor rtn_desc = 4;
  if (this->has_rtn_desc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->rtn_desc_, output);
  }

  // @@protoc_insertion_point(serialize_end:firmament.RegistrationMessage)
}

::google::protobuf::uint8* RegistrationMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:firmament.RegistrationMessage)
  // optional string uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), this->uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "firmament.RegistrationMessage.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uuid(), target);
  }

  // optional string location = 2;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "firmament.RegistrationMessage.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->location(), target);
  }

  // optional .firmament.ResourceDescriptor res_desc = 3;
  if (this->has_res_desc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->res_desc_, false, target);
  }

  // optional .firmament.ResourceTopologyNodeDescriptor rtn_desc = 4;
  if (this->has_rtn_desc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->rtn_desc_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:firmament.RegistrationMessage)
  return target;
}

size_t RegistrationMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:firmament.RegistrationMessage)
  size_t total_size = 0;

  // optional string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // optional string location = 2;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  // optional .firmament.ResourceDescriptor res_desc = 3;
  if (this->has_res_desc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->res_desc_);
  }

  // optional .firmament.ResourceTopologyNodeDescriptor rtn_desc = 4;
  if (this->has_rtn_desc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rtn_desc_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegistrationMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:firmament.RegistrationMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RegistrationMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegistrationMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:firmament.RegistrationMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:firmament.RegistrationMessage)
    UnsafeMergeFrom(*source);
  }
}

void RegistrationMessage::MergeFrom(const RegistrationMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:firmament.RegistrationMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RegistrationMessage::UnsafeMergeFrom(const RegistrationMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.location().size() > 0) {

    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  if (from.has_res_desc()) {
    mutable_res_desc()->::firmament::ResourceDescriptor::MergeFrom(from.res_desc());
  }
  if (from.has_rtn_desc()) {
    mutable_rtn_desc()->::firmament::ResourceTopologyNodeDescriptor::MergeFrom(from.rtn_desc());
  }
}

void RegistrationMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:firmament.RegistrationMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegistrationMessage::CopyFrom(const RegistrationMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:firmament.RegistrationMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RegistrationMessage::IsInitialized() const {

  return true;
}

void RegistrationMessage::Swap(RegistrationMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegistrationMessage::InternalSwap(RegistrationMessage* other) {
  uuid_.Swap(&other->uuid_);
  location_.Swap(&other->location_);
  std::swap(res_desc_, other->res_desc_);
  std::swap(rtn_desc_, other->rtn_desc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegistrationMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegistrationMessage_descriptor_;
  metadata.reflection = RegistrationMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegistrationMessage

// optional string uuid = 1;
void RegistrationMessage::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegistrationMessage::uuid() const {
  // @@protoc_insertion_point(field_get:firmament.RegistrationMessage.uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegistrationMessage::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:firmament.RegistrationMessage.uuid)
}
void RegistrationMessage::set_uuid(const char* value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:firmament.RegistrationMessage.uuid)
}
void RegistrationMessage::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:firmament.RegistrationMessage.uuid)
}
::std::string* RegistrationMessage::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:firmament.RegistrationMessage.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegistrationMessage::release_uuid() {
  // @@protoc_insertion_point(field_release:firmament.RegistrationMessage.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegistrationMessage::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:firmament.RegistrationMessage.uuid)
}

// optional string location = 2;
void RegistrationMessage::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegistrationMessage::location() const {
  // @@protoc_insertion_point(field_get:firmament.RegistrationMessage.location)
  return location_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegistrationMessage::set_location(const ::std::string& value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:firmament.RegistrationMessage.location)
}
void RegistrationMessage::set_location(const char* value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:firmament.RegistrationMessage.location)
}
void RegistrationMessage::set_location(const char* value, size_t size) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:firmament.RegistrationMessage.location)
}
::std::string* RegistrationMessage::mutable_location() {
  
  // @@protoc_insertion_point(field_mutable:firmament.RegistrationMessage.location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegistrationMessage::release_location() {
  // @@protoc_insertion_point(field_release:firmament.RegistrationMessage.location)
  
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegistrationMessage::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    
  } else {
    
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:firmament.RegistrationMessage.location)
}

// optional .firmament.ResourceDescriptor res_desc = 3;
bool RegistrationMessage::has_res_desc() const {
  return this != internal_default_instance() && res_desc_ != NULL;
}
void RegistrationMessage::clear_res_desc() {
  if (GetArenaNoVirtual() == NULL && res_desc_ != NULL) delete res_desc_;
  res_desc_ = NULL;
}
const ::firmament::ResourceDescriptor& RegistrationMessage::res_desc() const {
  // @@protoc_insertion_point(field_get:firmament.RegistrationMessage.res_desc)
  return res_desc_ != NULL ? *res_desc_
                         : *::firmament::ResourceDescriptor::internal_default_instance();
}
::firmament::ResourceDescriptor* RegistrationMessage::mutable_res_desc() {
  
  if (res_desc_ == NULL) {
    res_desc_ = new ::firmament::ResourceDescriptor;
  }
  // @@protoc_insertion_point(field_mutable:firmament.RegistrationMessage.res_desc)
  return res_desc_;
}
::firmament::ResourceDescriptor* RegistrationMessage::release_res_desc() {
  // @@protoc_insertion_point(field_release:firmament.RegistrationMessage.res_desc)
  
  ::firmament::ResourceDescriptor* temp = res_desc_;
  res_desc_ = NULL;
  return temp;
}
void RegistrationMessage::set_allocated_res_desc(::firmament::ResourceDescriptor* res_desc) {
  delete res_desc_;
  res_desc_ = res_desc;
  if (res_desc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:firmament.RegistrationMessage.res_desc)
}

// optional .firmament.ResourceTopologyNodeDescriptor rtn_desc = 4;
bool RegistrationMessage::has_rtn_desc() const {
  return this != internal_default_instance() && rtn_desc_ != NULL;
}
void RegistrationMessage::clear_rtn_desc() {
  if (GetArenaNoVirtual() == NULL && rtn_desc_ != NULL) delete rtn_desc_;
  rtn_desc_ = NULL;
}
const ::firmament::ResourceTopologyNodeDescriptor& RegistrationMessage::rtn_desc() const {
  // @@protoc_insertion_point(field_get:firmament.RegistrationMessage.rtn_desc)
  return rtn_desc_ != NULL ? *rtn_desc_
                         : *::firmament::ResourceTopologyNodeDescriptor::internal_default_instance();
}
::firmament::ResourceTopologyNodeDescriptor* RegistrationMessage::mutable_rtn_desc() {
  
  if (rtn_desc_ == NULL) {
    rtn_desc_ = new ::firmament::ResourceTopologyNodeDescriptor;
  }
  // @@protoc_insertion_point(field_mutable:firmament.RegistrationMessage.rtn_desc)
  return rtn_desc_;
}
::firmament::ResourceTopologyNodeDescriptor* RegistrationMessage::release_rtn_desc() {
  // @@protoc_insertion_point(field_release:firmament.RegistrationMessage.rtn_desc)
  
  ::firmament::ResourceTopologyNodeDescriptor* temp = rtn_desc_;
  rtn_desc_ = NULL;
  return temp;
}
void RegistrationMessage::set_allocated_rtn_desc(::firmament::ResourceTopologyNodeDescriptor* rtn_desc) {
  delete rtn_desc_;
  rtn_desc_ = rtn_desc;
  if (rtn_desc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:firmament.RegistrationMessage.rtn_desc)
}

inline const RegistrationMessage* RegistrationMessage::internal_default_instance() {
  return &RegistrationMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace firmament

// @@protoc_insertion_point(global_scope)
