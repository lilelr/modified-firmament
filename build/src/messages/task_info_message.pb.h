// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages/task_info_message.proto

#ifndef PROTOBUF_messages_2ftask_5finfo_5fmessage_2eproto__INCLUDED
#define PROTOBUF_messages_2ftask_5finfo_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "base/task_desc.pb.h"
// @@protoc_insertion_point(includes)

namespace firmament {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_messages_2ftask_5finfo_5fmessage_2eproto();
void protobuf_InitDefaults_messages_2ftask_5finfo_5fmessage_2eproto();
void protobuf_AssignDesc_messages_2ftask_5finfo_5fmessage_2eproto();
void protobuf_ShutdownFile_messages_2ftask_5finfo_5fmessage_2eproto();

class TaskInfoRequestMessage;
class TaskInfoResponseMessage;

// ===================================================================

class TaskInfoRequestMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:firmament.TaskInfoRequestMessage) */ {
 public:
  TaskInfoRequestMessage();
  virtual ~TaskInfoRequestMessage();

  TaskInfoRequestMessage(const TaskInfoRequestMessage& from);

  inline TaskInfoRequestMessage& operator=(const TaskInfoRequestMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskInfoRequestMessage& default_instance();

  static const TaskInfoRequestMessage* internal_default_instance();

  void Swap(TaskInfoRequestMessage* other);

  // implements Message ----------------------------------------------

  inline TaskInfoRequestMessage* New() const { return New(NULL); }

  TaskInfoRequestMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskInfoRequestMessage& from);
  void MergeFrom(const TaskInfoRequestMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaskInfoRequestMessage* other);
  void UnsafeMergeFrom(const TaskInfoRequestMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 task_id = 1;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  ::google::protobuf::uint64 task_id() const;
  void set_task_id(::google::protobuf::uint64 value);

  // optional string requesting_resource_id = 2;
  void clear_requesting_resource_id();
  static const int kRequestingResourceIdFieldNumber = 2;
  const ::std::string& requesting_resource_id() const;
  void set_requesting_resource_id(const ::std::string& value);
  void set_requesting_resource_id(const char* value);
  void set_requesting_resource_id(const char* value, size_t size);
  ::std::string* mutable_requesting_resource_id();
  ::std::string* release_requesting_resource_id();
  void set_allocated_requesting_resource_id(::std::string* requesting_resource_id);

  // optional string requesting_endpoint = 3;
  void clear_requesting_endpoint();
  static const int kRequestingEndpointFieldNumber = 3;
  const ::std::string& requesting_endpoint() const;
  void set_requesting_endpoint(const ::std::string& value);
  void set_requesting_endpoint(const char* value);
  void set_requesting_endpoint(const char* value, size_t size);
  ::std::string* mutable_requesting_endpoint();
  ::std::string* release_requesting_endpoint();
  void set_allocated_requesting_endpoint(::std::string* requesting_endpoint);

  // optional uint32 task_pid = 4;
  void clear_task_pid();
  static const int kTaskPidFieldNumber = 4;
  ::google::protobuf::uint32 task_pid() const;
  void set_task_pid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:firmament.TaskInfoRequestMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr requesting_resource_id_;
  ::google::protobuf::internal::ArenaStringPtr requesting_endpoint_;
  ::google::protobuf::uint64 task_id_;
  ::google::protobuf::uint32 task_pid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_messages_2ftask_5finfo_5fmessage_2eproto_impl();
  friend void  protobuf_AddDesc_messages_2ftask_5finfo_5fmessage_2eproto_impl();
  friend void protobuf_AssignDesc_messages_2ftask_5finfo_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_messages_2ftask_5finfo_5fmessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TaskInfoRequestMessage> TaskInfoRequestMessage_default_instance_;

// -------------------------------------------------------------------

class TaskInfoResponseMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:firmament.TaskInfoResponseMessage) */ {
 public:
  TaskInfoResponseMessage();
  virtual ~TaskInfoResponseMessage();

  TaskInfoResponseMessage(const TaskInfoResponseMessage& from);

  inline TaskInfoResponseMessage& operator=(const TaskInfoResponseMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskInfoResponseMessage& default_instance();

  static const TaskInfoResponseMessage* internal_default_instance();

  void Swap(TaskInfoResponseMessage* other);

  // implements Message ----------------------------------------------

  inline TaskInfoResponseMessage* New() const { return New(NULL); }

  TaskInfoResponseMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskInfoResponseMessage& from);
  void MergeFrom(const TaskInfoResponseMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaskInfoResponseMessage* other);
  void UnsafeMergeFrom(const TaskInfoResponseMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 task_id = 1;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  ::google::protobuf::uint64 task_id() const;
  void set_task_id(::google::protobuf::uint64 value);

  // optional .firmament.TaskDescriptor task_desc = 2;
  bool has_task_desc() const;
  void clear_task_desc();
  static const int kTaskDescFieldNumber = 2;
  const ::firmament::TaskDescriptor& task_desc() const;
  ::firmament::TaskDescriptor* mutable_task_desc();
  ::firmament::TaskDescriptor* release_task_desc();
  void set_allocated_task_desc(::firmament::TaskDescriptor* task_desc);

  // @@protoc_insertion_point(class_scope:firmament.TaskInfoResponseMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::firmament::TaskDescriptor* task_desc_;
  ::google::protobuf::uint64 task_id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_messages_2ftask_5finfo_5fmessage_2eproto_impl();
  friend void  protobuf_AddDesc_messages_2ftask_5finfo_5fmessage_2eproto_impl();
  friend void protobuf_AssignDesc_messages_2ftask_5finfo_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_messages_2ftask_5finfo_5fmessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TaskInfoResponseMessage> TaskInfoResponseMessage_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TaskInfoRequestMessage

// optional uint64 task_id = 1;
inline void TaskInfoRequestMessage::clear_task_id() {
  task_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TaskInfoRequestMessage::task_id() const {
  // @@protoc_insertion_point(field_get:firmament.TaskInfoRequestMessage.task_id)
  return task_id_;
}
inline void TaskInfoRequestMessage::set_task_id(::google::protobuf::uint64 value) {
  
  task_id_ = value;
  // @@protoc_insertion_point(field_set:firmament.TaskInfoRequestMessage.task_id)
}

// optional string requesting_resource_id = 2;
inline void TaskInfoRequestMessage::clear_requesting_resource_id() {
  requesting_resource_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TaskInfoRequestMessage::requesting_resource_id() const {
  // @@protoc_insertion_point(field_get:firmament.TaskInfoRequestMessage.requesting_resource_id)
  return requesting_resource_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskInfoRequestMessage::set_requesting_resource_id(const ::std::string& value) {
  
  requesting_resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:firmament.TaskInfoRequestMessage.requesting_resource_id)
}
inline void TaskInfoRequestMessage::set_requesting_resource_id(const char* value) {
  
  requesting_resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:firmament.TaskInfoRequestMessage.requesting_resource_id)
}
inline void TaskInfoRequestMessage::set_requesting_resource_id(const char* value, size_t size) {
  
  requesting_resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:firmament.TaskInfoRequestMessage.requesting_resource_id)
}
inline ::std::string* TaskInfoRequestMessage::mutable_requesting_resource_id() {
  
  // @@protoc_insertion_point(field_mutable:firmament.TaskInfoRequestMessage.requesting_resource_id)
  return requesting_resource_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TaskInfoRequestMessage::release_requesting_resource_id() {
  // @@protoc_insertion_point(field_release:firmament.TaskInfoRequestMessage.requesting_resource_id)
  
  return requesting_resource_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskInfoRequestMessage::set_allocated_requesting_resource_id(::std::string* requesting_resource_id) {
  if (requesting_resource_id != NULL) {
    
  } else {
    
  }
  requesting_resource_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), requesting_resource_id);
  // @@protoc_insertion_point(field_set_allocated:firmament.TaskInfoRequestMessage.requesting_resource_id)
}

// optional string requesting_endpoint = 3;
inline void TaskInfoRequestMessage::clear_requesting_endpoint() {
  requesting_endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TaskInfoRequestMessage::requesting_endpoint() const {
  // @@protoc_insertion_point(field_get:firmament.TaskInfoRequestMessage.requesting_endpoint)
  return requesting_endpoint_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskInfoRequestMessage::set_requesting_endpoint(const ::std::string& value) {
  
  requesting_endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:firmament.TaskInfoRequestMessage.requesting_endpoint)
}
inline void TaskInfoRequestMessage::set_requesting_endpoint(const char* value) {
  
  requesting_endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:firmament.TaskInfoRequestMessage.requesting_endpoint)
}
inline void TaskInfoRequestMessage::set_requesting_endpoint(const char* value, size_t size) {
  
  requesting_endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:firmament.TaskInfoRequestMessage.requesting_endpoint)
}
inline ::std::string* TaskInfoRequestMessage::mutable_requesting_endpoint() {
  
  // @@protoc_insertion_point(field_mutable:firmament.TaskInfoRequestMessage.requesting_endpoint)
  return requesting_endpoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TaskInfoRequestMessage::release_requesting_endpoint() {
  // @@protoc_insertion_point(field_release:firmament.TaskInfoRequestMessage.requesting_endpoint)
  
  return requesting_endpoint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskInfoRequestMessage::set_allocated_requesting_endpoint(::std::string* requesting_endpoint) {
  if (requesting_endpoint != NULL) {
    
  } else {
    
  }
  requesting_endpoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), requesting_endpoint);
  // @@protoc_insertion_point(field_set_allocated:firmament.TaskInfoRequestMessage.requesting_endpoint)
}

// optional uint32 task_pid = 4;
inline void TaskInfoRequestMessage::clear_task_pid() {
  task_pid_ = 0u;
}
inline ::google::protobuf::uint32 TaskInfoRequestMessage::task_pid() const {
  // @@protoc_insertion_point(field_get:firmament.TaskInfoRequestMessage.task_pid)
  return task_pid_;
}
inline void TaskInfoRequestMessage::set_task_pid(::google::protobuf::uint32 value) {
  
  task_pid_ = value;
  // @@protoc_insertion_point(field_set:firmament.TaskInfoRequestMessage.task_pid)
}

inline const TaskInfoRequestMessage* TaskInfoRequestMessage::internal_default_instance() {
  return &TaskInfoRequestMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// TaskInfoResponseMessage

// optional uint64 task_id = 1;
inline void TaskInfoResponseMessage::clear_task_id() {
  task_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TaskInfoResponseMessage::task_id() const {
  // @@protoc_insertion_point(field_get:firmament.TaskInfoResponseMessage.task_id)
  return task_id_;
}
inline void TaskInfoResponseMessage::set_task_id(::google::protobuf::uint64 value) {
  
  task_id_ = value;
  // @@protoc_insertion_point(field_set:firmament.TaskInfoResponseMessage.task_id)
}

// optional .firmament.TaskDescriptor task_desc = 2;
inline bool TaskInfoResponseMessage::has_task_desc() const {
  return this != internal_default_instance() && task_desc_ != NULL;
}
inline void TaskInfoResponseMessage::clear_task_desc() {
  if (GetArenaNoVirtual() == NULL && task_desc_ != NULL) delete task_desc_;
  task_desc_ = NULL;
}
inline const ::firmament::TaskDescriptor& TaskInfoResponseMessage::task_desc() const {
  // @@protoc_insertion_point(field_get:firmament.TaskInfoResponseMessage.task_desc)
  return task_desc_ != NULL ? *task_desc_
                         : *::firmament::TaskDescriptor::internal_default_instance();
}
inline ::firmament::TaskDescriptor* TaskInfoResponseMessage::mutable_task_desc() {
  
  if (task_desc_ == NULL) {
    task_desc_ = new ::firmament::TaskDescriptor;
  }
  // @@protoc_insertion_point(field_mutable:firmament.TaskInfoResponseMessage.task_desc)
  return task_desc_;
}
inline ::firmament::TaskDescriptor* TaskInfoResponseMessage::release_task_desc() {
  // @@protoc_insertion_point(field_release:firmament.TaskInfoResponseMessage.task_desc)
  
  ::firmament::TaskDescriptor* temp = task_desc_;
  task_desc_ = NULL;
  return temp;
}
inline void TaskInfoResponseMessage::set_allocated_task_desc(::firmament::TaskDescriptor* task_desc) {
  delete task_desc_;
  task_desc_ = task_desc;
  if (task_desc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:firmament.TaskInfoResponseMessage.task_desc)
}

inline const TaskInfoResponseMessage* TaskInfoResponseMessage::internal_default_instance() {
  return &TaskInfoResponseMessage_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace firmament

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_messages_2ftask_5finfo_5fmessage_2eproto__INCLUDED
