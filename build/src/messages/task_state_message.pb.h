// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages/task_state_message.proto

#ifndef PROTOBUF_messages_2ftask_5fstate_5fmessage_2eproto__INCLUDED
#define PROTOBUF_messages_2ftask_5fstate_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "base/task_desc.pb.h"
#include "base/task_final_report.pb.h"
// @@protoc_insertion_point(includes)

namespace firmament {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_messages_2ftask_5fstate_5fmessage_2eproto();
void protobuf_InitDefaults_messages_2ftask_5fstate_5fmessage_2eproto();
void protobuf_AssignDesc_messages_2ftask_5fstate_5fmessage_2eproto();
void protobuf_ShutdownFile_messages_2ftask_5fstate_5fmessage_2eproto();

class TaskStateMessage;

// ===================================================================

class TaskStateMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:firmament.TaskStateMessage) */ {
 public:
  TaskStateMessage();
  virtual ~TaskStateMessage();

  TaskStateMessage(const TaskStateMessage& from);

  inline TaskStateMessage& operator=(const TaskStateMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskStateMessage& default_instance();

  static const TaskStateMessage* internal_default_instance();

  void Swap(TaskStateMessage* other);

  // implements Message ----------------------------------------------

  inline TaskStateMessage* New() const { return New(NULL); }

  TaskStateMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskStateMessage& from);
  void MergeFrom(const TaskStateMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaskStateMessage* other);
  void UnsafeMergeFrom(const TaskStateMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional .firmament.TaskDescriptor.TaskState new_state = 2;
  void clear_new_state();
  static const int kNewStateFieldNumber = 2;
  ::firmament::TaskDescriptor_TaskState new_state() const;
  void set_new_state(::firmament::TaskDescriptor_TaskState value);

  // optional .firmament.TaskFinalReport report = 3;
  bool has_report() const;
  void clear_report();
  static const int kReportFieldNumber = 3;
  const ::firmament::TaskFinalReport& report() const;
  ::firmament::TaskFinalReport* mutable_report();
  ::firmament::TaskFinalReport* release_report();
  void set_allocated_report(::firmament::TaskFinalReport* report);

  // @@protoc_insertion_point(class_scope:firmament.TaskStateMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::firmament::TaskFinalReport* report_;
  ::google::protobuf::uint64 id_;
  int new_state_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_messages_2ftask_5fstate_5fmessage_2eproto_impl();
  friend void  protobuf_AddDesc_messages_2ftask_5fstate_5fmessage_2eproto_impl();
  friend void protobuf_AssignDesc_messages_2ftask_5fstate_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_messages_2ftask_5fstate_5fmessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TaskStateMessage> TaskStateMessage_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TaskStateMessage

// optional uint64 id = 1;
inline void TaskStateMessage::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TaskStateMessage::id() const {
  // @@protoc_insertion_point(field_get:firmament.TaskStateMessage.id)
  return id_;
}
inline void TaskStateMessage::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:firmament.TaskStateMessage.id)
}

// optional .firmament.TaskDescriptor.TaskState new_state = 2;
inline void TaskStateMessage::clear_new_state() {
  new_state_ = 0;
}
inline ::firmament::TaskDescriptor_TaskState TaskStateMessage::new_state() const {
  // @@protoc_insertion_point(field_get:firmament.TaskStateMessage.new_state)
  return static_cast< ::firmament::TaskDescriptor_TaskState >(new_state_);
}
inline void TaskStateMessage::set_new_state(::firmament::TaskDescriptor_TaskState value) {
  
  new_state_ = value;
  // @@protoc_insertion_point(field_set:firmament.TaskStateMessage.new_state)
}

// optional .firmament.TaskFinalReport report = 3;
inline bool TaskStateMessage::has_report() const {
  return this != internal_default_instance() && report_ != NULL;
}
inline void TaskStateMessage::clear_report() {
  if (GetArenaNoVirtual() == NULL && report_ != NULL) delete report_;
  report_ = NULL;
}
inline const ::firmament::TaskFinalReport& TaskStateMessage::report() const {
  // @@protoc_insertion_point(field_get:firmament.TaskStateMessage.report)
  return report_ != NULL ? *report_
                         : *::firmament::TaskFinalReport::internal_default_instance();
}
inline ::firmament::TaskFinalReport* TaskStateMessage::mutable_report() {
  
  if (report_ == NULL) {
    report_ = new ::firmament::TaskFinalReport;
  }
  // @@protoc_insertion_point(field_mutable:firmament.TaskStateMessage.report)
  return report_;
}
inline ::firmament::TaskFinalReport* TaskStateMessage::release_report() {
  // @@protoc_insertion_point(field_release:firmament.TaskStateMessage.report)
  
  ::firmament::TaskFinalReport* temp = report_;
  report_ = NULL;
  return temp;
}
inline void TaskStateMessage::set_allocated_report(::firmament::TaskFinalReport* report) {
  delete report_;
  report_ = report;
  if (report) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:firmament.TaskStateMessage.report)
}

inline const TaskStateMessage* TaskStateMessage::internal_default_instance() {
  return &TaskStateMessage_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace firmament

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_messages_2ftask_5fstate_5fmessage_2eproto__INCLUDED
