// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages/task_delegation_message.proto

#ifndef PROTOBUF_messages_2ftask_5fdelegation_5fmessage_2eproto__INCLUDED
#define PROTOBUF_messages_2ftask_5fdelegation_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "base/task_desc.pb.h"
// @@protoc_insertion_point(includes)

namespace firmament {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_messages_2ftask_5fdelegation_5fmessage_2eproto();
void protobuf_InitDefaults_messages_2ftask_5fdelegation_5fmessage_2eproto();
void protobuf_AssignDesc_messages_2ftask_5fdelegation_5fmessage_2eproto();
void protobuf_ShutdownFile_messages_2ftask_5fdelegation_5fmessage_2eproto();

class TaskDelegationRequestMessage;
class TaskDelegationResponseMessage;

// ===================================================================

class TaskDelegationRequestMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:firmament.TaskDelegationRequestMessage) */ {
 public:
  TaskDelegationRequestMessage();
  virtual ~TaskDelegationRequestMessage();

  TaskDelegationRequestMessage(const TaskDelegationRequestMessage& from);

  inline TaskDelegationRequestMessage& operator=(const TaskDelegationRequestMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskDelegationRequestMessage& default_instance();

  static const TaskDelegationRequestMessage* internal_default_instance();

  void Swap(TaskDelegationRequestMessage* other);

  // implements Message ----------------------------------------------

  inline TaskDelegationRequestMessage* New() const { return New(NULL); }

  TaskDelegationRequestMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskDelegationRequestMessage& from);
  void MergeFrom(const TaskDelegationRequestMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaskDelegationRequestMessage* other);
  void UnsafeMergeFrom(const TaskDelegationRequestMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .firmament.TaskDescriptor task_descriptor = 2;
  bool has_task_descriptor() const;
  void clear_task_descriptor();
  static const int kTaskDescriptorFieldNumber = 2;
  const ::firmament::TaskDescriptor& task_descriptor() const;
  ::firmament::TaskDescriptor* mutable_task_descriptor();
  ::firmament::TaskDescriptor* release_task_descriptor();
  void set_allocated_task_descriptor(::firmament::TaskDescriptor* task_descriptor);

  // optional string target_resource_id = 1;
  void clear_target_resource_id();
  static const int kTargetResourceIdFieldNumber = 1;
  const ::std::string& target_resource_id() const;
  void set_target_resource_id(const ::std::string& value);
  void set_target_resource_id(const char* value);
  void set_target_resource_id(const char* value, size_t size);
  ::std::string* mutable_target_resource_id();
  ::std::string* release_target_resource_id();
  void set_allocated_target_resource_id(::std::string* target_resource_id);

  // optional string delegating_resource_id = 3;
  void clear_delegating_resource_id();
  static const int kDelegatingResourceIdFieldNumber = 3;
  const ::std::string& delegating_resource_id() const;
  void set_delegating_resource_id(const ::std::string& value);
  void set_delegating_resource_id(const char* value);
  void set_delegating_resource_id(const char* value, size_t size);
  ::std::string* mutable_delegating_resource_id();
  ::std::string* release_delegating_resource_id();
  void set_allocated_delegating_resource_id(::std::string* delegating_resource_id);

  // @@protoc_insertion_point(class_scope:firmament.TaskDelegationRequestMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr target_resource_id_;
  ::google::protobuf::internal::ArenaStringPtr delegating_resource_id_;
  ::firmament::TaskDescriptor* task_descriptor_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_messages_2ftask_5fdelegation_5fmessage_2eproto_impl();
  friend void  protobuf_AddDesc_messages_2ftask_5fdelegation_5fmessage_2eproto_impl();
  friend void protobuf_AssignDesc_messages_2ftask_5fdelegation_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_messages_2ftask_5fdelegation_5fmessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TaskDelegationRequestMessage> TaskDelegationRequestMessage_default_instance_;

// -------------------------------------------------------------------

class TaskDelegationResponseMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:firmament.TaskDelegationResponseMessage) */ {
 public:
  TaskDelegationResponseMessage();
  virtual ~TaskDelegationResponseMessage();

  TaskDelegationResponseMessage(const TaskDelegationResponseMessage& from);

  inline TaskDelegationResponseMessage& operator=(const TaskDelegationResponseMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskDelegationResponseMessage& default_instance();

  static const TaskDelegationResponseMessage* internal_default_instance();

  void Swap(TaskDelegationResponseMessage* other);

  // implements Message ----------------------------------------------

  inline TaskDelegationResponseMessage* New() const { return New(NULL); }

  TaskDelegationResponseMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskDelegationResponseMessage& from);
  void MergeFrom(const TaskDelegationResponseMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaskDelegationResponseMessage* other);
  void UnsafeMergeFrom(const TaskDelegationResponseMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 task_id = 1;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  ::google::protobuf::uint64 task_id() const;
  void set_task_id(::google::protobuf::uint64 value);

  // optional bool success = 2;
  void clear_success();
  static const int kSuccessFieldNumber = 2;
  bool success() const;
  void set_success(bool value);

  // optional string target_resource_id = 3;
  void clear_target_resource_id();
  static const int kTargetResourceIdFieldNumber = 3;
  const ::std::string& target_resource_id() const;
  void set_target_resource_id(const ::std::string& value);
  void set_target_resource_id(const char* value);
  void set_target_resource_id(const char* value, size_t size);
  ::std::string* mutable_target_resource_id();
  ::std::string* release_target_resource_id();
  void set_allocated_target_resource_id(::std::string* target_resource_id);

  // @@protoc_insertion_point(class_scope:firmament.TaskDelegationResponseMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr target_resource_id_;
  ::google::protobuf::uint64 task_id_;
  bool success_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_messages_2ftask_5fdelegation_5fmessage_2eproto_impl();
  friend void  protobuf_AddDesc_messages_2ftask_5fdelegation_5fmessage_2eproto_impl();
  friend void protobuf_AssignDesc_messages_2ftask_5fdelegation_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_messages_2ftask_5fdelegation_5fmessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TaskDelegationResponseMessage> TaskDelegationResponseMessage_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TaskDelegationRequestMessage

// optional .firmament.TaskDescriptor task_descriptor = 2;
inline bool TaskDelegationRequestMessage::has_task_descriptor() const {
  return this != internal_default_instance() && task_descriptor_ != NULL;
}
inline void TaskDelegationRequestMessage::clear_task_descriptor() {
  if (GetArenaNoVirtual() == NULL && task_descriptor_ != NULL) delete task_descriptor_;
  task_descriptor_ = NULL;
}
inline const ::firmament::TaskDescriptor& TaskDelegationRequestMessage::task_descriptor() const {
  // @@protoc_insertion_point(field_get:firmament.TaskDelegationRequestMessage.task_descriptor)
  return task_descriptor_ != NULL ? *task_descriptor_
                         : *::firmament::TaskDescriptor::internal_default_instance();
}
inline ::firmament::TaskDescriptor* TaskDelegationRequestMessage::mutable_task_descriptor() {
  
  if (task_descriptor_ == NULL) {
    task_descriptor_ = new ::firmament::TaskDescriptor;
  }
  // @@protoc_insertion_point(field_mutable:firmament.TaskDelegationRequestMessage.task_descriptor)
  return task_descriptor_;
}
inline ::firmament::TaskDescriptor* TaskDelegationRequestMessage::release_task_descriptor() {
  // @@protoc_insertion_point(field_release:firmament.TaskDelegationRequestMessage.task_descriptor)
  
  ::firmament::TaskDescriptor* temp = task_descriptor_;
  task_descriptor_ = NULL;
  return temp;
}
inline void TaskDelegationRequestMessage::set_allocated_task_descriptor(::firmament::TaskDescriptor* task_descriptor) {
  delete task_descriptor_;
  task_descriptor_ = task_descriptor;
  if (task_descriptor) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:firmament.TaskDelegationRequestMessage.task_descriptor)
}

// optional string target_resource_id = 1;
inline void TaskDelegationRequestMessage::clear_target_resource_id() {
  target_resource_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TaskDelegationRequestMessage::target_resource_id() const {
  // @@protoc_insertion_point(field_get:firmament.TaskDelegationRequestMessage.target_resource_id)
  return target_resource_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskDelegationRequestMessage::set_target_resource_id(const ::std::string& value) {
  
  target_resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:firmament.TaskDelegationRequestMessage.target_resource_id)
}
inline void TaskDelegationRequestMessage::set_target_resource_id(const char* value) {
  
  target_resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:firmament.TaskDelegationRequestMessage.target_resource_id)
}
inline void TaskDelegationRequestMessage::set_target_resource_id(const char* value, size_t size) {
  
  target_resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:firmament.TaskDelegationRequestMessage.target_resource_id)
}
inline ::std::string* TaskDelegationRequestMessage::mutable_target_resource_id() {
  
  // @@protoc_insertion_point(field_mutable:firmament.TaskDelegationRequestMessage.target_resource_id)
  return target_resource_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TaskDelegationRequestMessage::release_target_resource_id() {
  // @@protoc_insertion_point(field_release:firmament.TaskDelegationRequestMessage.target_resource_id)
  
  return target_resource_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskDelegationRequestMessage::set_allocated_target_resource_id(::std::string* target_resource_id) {
  if (target_resource_id != NULL) {
    
  } else {
    
  }
  target_resource_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_resource_id);
  // @@protoc_insertion_point(field_set_allocated:firmament.TaskDelegationRequestMessage.target_resource_id)
}

// optional string delegating_resource_id = 3;
inline void TaskDelegationRequestMessage::clear_delegating_resource_id() {
  delegating_resource_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TaskDelegationRequestMessage::delegating_resource_id() const {
  // @@protoc_insertion_point(field_get:firmament.TaskDelegationRequestMessage.delegating_resource_id)
  return delegating_resource_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskDelegationRequestMessage::set_delegating_resource_id(const ::std::string& value) {
  
  delegating_resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:firmament.TaskDelegationRequestMessage.delegating_resource_id)
}
inline void TaskDelegationRequestMessage::set_delegating_resource_id(const char* value) {
  
  delegating_resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:firmament.TaskDelegationRequestMessage.delegating_resource_id)
}
inline void TaskDelegationRequestMessage::set_delegating_resource_id(const char* value, size_t size) {
  
  delegating_resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:firmament.TaskDelegationRequestMessage.delegating_resource_id)
}
inline ::std::string* TaskDelegationRequestMessage::mutable_delegating_resource_id() {
  
  // @@protoc_insertion_point(field_mutable:firmament.TaskDelegationRequestMessage.delegating_resource_id)
  return delegating_resource_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TaskDelegationRequestMessage::release_delegating_resource_id() {
  // @@protoc_insertion_point(field_release:firmament.TaskDelegationRequestMessage.delegating_resource_id)
  
  return delegating_resource_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskDelegationRequestMessage::set_allocated_delegating_resource_id(::std::string* delegating_resource_id) {
  if (delegating_resource_id != NULL) {
    
  } else {
    
  }
  delegating_resource_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), delegating_resource_id);
  // @@protoc_insertion_point(field_set_allocated:firmament.TaskDelegationRequestMessage.delegating_resource_id)
}

inline const TaskDelegationRequestMessage* TaskDelegationRequestMessage::internal_default_instance() {
  return &TaskDelegationRequestMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// TaskDelegationResponseMessage

// optional uint64 task_id = 1;
inline void TaskDelegationResponseMessage::clear_task_id() {
  task_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TaskDelegationResponseMessage::task_id() const {
  // @@protoc_insertion_point(field_get:firmament.TaskDelegationResponseMessage.task_id)
  return task_id_;
}
inline void TaskDelegationResponseMessage::set_task_id(::google::protobuf::uint64 value) {
  
  task_id_ = value;
  // @@protoc_insertion_point(field_set:firmament.TaskDelegationResponseMessage.task_id)
}

// optional bool success = 2;
inline void TaskDelegationResponseMessage::clear_success() {
  success_ = false;
}
inline bool TaskDelegationResponseMessage::success() const {
  // @@protoc_insertion_point(field_get:firmament.TaskDelegationResponseMessage.success)
  return success_;
}
inline void TaskDelegationResponseMessage::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:firmament.TaskDelegationResponseMessage.success)
}

// optional string target_resource_id = 3;
inline void TaskDelegationResponseMessage::clear_target_resource_id() {
  target_resource_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TaskDelegationResponseMessage::target_resource_id() const {
  // @@protoc_insertion_point(field_get:firmament.TaskDelegationResponseMessage.target_resource_id)
  return target_resource_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskDelegationResponseMessage::set_target_resource_id(const ::std::string& value) {
  
  target_resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:firmament.TaskDelegationResponseMessage.target_resource_id)
}
inline void TaskDelegationResponseMessage::set_target_resource_id(const char* value) {
  
  target_resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:firmament.TaskDelegationResponseMessage.target_resource_id)
}
inline void TaskDelegationResponseMessage::set_target_resource_id(const char* value, size_t size) {
  
  target_resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:firmament.TaskDelegationResponseMessage.target_resource_id)
}
inline ::std::string* TaskDelegationResponseMessage::mutable_target_resource_id() {
  
  // @@protoc_insertion_point(field_mutable:firmament.TaskDelegationResponseMessage.target_resource_id)
  return target_resource_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TaskDelegationResponseMessage::release_target_resource_id() {
  // @@protoc_insertion_point(field_release:firmament.TaskDelegationResponseMessage.target_resource_id)
  
  return target_resource_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskDelegationResponseMessage::set_allocated_target_resource_id(::std::string* target_resource_id) {
  if (target_resource_id != NULL) {
    
  } else {
    
  }
  target_resource_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_resource_id);
  // @@protoc_insertion_point(field_set_allocated:firmament.TaskDelegationResponseMessage.target_resource_id)
}

inline const TaskDelegationResponseMessage* TaskDelegationResponseMessage::internal_default_instance() {
  return &TaskDelegationResponseMessage_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace firmament

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_messages_2ftask_5fdelegation_5fmessage_2eproto__INCLUDED
