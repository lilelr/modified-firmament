// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scheduling/firmament_scheduler.proto

#ifndef PROTOBUF_scheduling_2ffirmament_5fscheduler_2eproto__INCLUDED
#define PROTOBUF_scheduling_2ffirmament_5fscheduler_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "base/job_desc.pb.h"
#include "base/resource_stats.pb.h"
#include "base/resource_topology_node_desc.pb.h"
#include "base/task_desc.pb.h"
#include "base/task_stats.pb.h"
#include "scheduling/scheduling_delta.pb.h"
// @@protoc_insertion_point(includes)

namespace firmament {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_scheduling_2ffirmament_5fscheduler_2eproto();
void protobuf_InitDefaults_scheduling_2ffirmament_5fscheduler_2eproto();
void protobuf_AssignDesc_scheduling_2ffirmament_5fscheduler_2eproto();
void protobuf_ShutdownFile_scheduling_2ffirmament_5fscheduler_2eproto();

class NodeAddedResponse;
class NodeFailedResponse;
class NodeRemovedResponse;
class NodeUpdatedResponse;
class ResourceStatsResponse;
class ResourceUID;
class ScheduleRequest;
class SchedulingDeltas;
class TaskCompletedResponse;
class TaskDescription;
class TaskFailedResponse;
class TaskRemovedResponse;
class TaskStatsResponse;
class TaskSubmittedResponse;
class TaskUID;
class TaskUpdatedResponse;

enum TaskReplyType {
  TASK_COMPLETED_OK = 0,
  TASK_SUBMITTED_OK = 1,
  TASK_REMOVED_OK = 2,
  TASK_FAILED_OK = 3,
  TASK_UPDATED_OK = 4,
  TASK_NOT_FOUND = 5,
  TASK_JOB_NOT_FOUND = 6,
  TASK_ALREADY_SUBMITTED = 7,
  TASK_STATE_NOT_CREATED = 8,
  TaskReplyType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TaskReplyType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TaskReplyType_IsValid(int value);
const TaskReplyType TaskReplyType_MIN = TASK_COMPLETED_OK;
const TaskReplyType TaskReplyType_MAX = TASK_STATE_NOT_CREATED;
const int TaskReplyType_ARRAYSIZE = TaskReplyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TaskReplyType_descriptor();
inline const ::std::string& TaskReplyType_Name(TaskReplyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TaskReplyType_descriptor(), value);
}
inline bool TaskReplyType_Parse(
    const ::std::string& name, TaskReplyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TaskReplyType>(
    TaskReplyType_descriptor(), name, value);
}
enum NodeReplyType {
  NODE_ADDED_OK = 0,
  NODE_FAILED_OK = 1,
  NODE_REMOVED_OK = 2,
  NODE_UPDATED_OK = 3,
  NODE_NOT_FOUND = 4,
  NODE_ALREADY_EXISTS = 5,
  NodeReplyType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  NodeReplyType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool NodeReplyType_IsValid(int value);
const NodeReplyType NodeReplyType_MIN = NODE_ADDED_OK;
const NodeReplyType NodeReplyType_MAX = NODE_ALREADY_EXISTS;
const int NodeReplyType_ARRAYSIZE = NodeReplyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* NodeReplyType_descriptor();
inline const ::std::string& NodeReplyType_Name(NodeReplyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    NodeReplyType_descriptor(), value);
}
inline bool NodeReplyType_Parse(
    const ::std::string& name, NodeReplyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NodeReplyType>(
    NodeReplyType_descriptor(), name, value);
}
// ===================================================================

class ScheduleRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:firmament.ScheduleRequest) */ {
 public:
  ScheduleRequest();
  virtual ~ScheduleRequest();

  ScheduleRequest(const ScheduleRequest& from);

  inline ScheduleRequest& operator=(const ScheduleRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScheduleRequest& default_instance();

  static const ScheduleRequest* internal_default_instance();

  void Swap(ScheduleRequest* other);

  // implements Message ----------------------------------------------

  inline ScheduleRequest* New() const { return New(NULL); }

  ScheduleRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScheduleRequest& from);
  void MergeFrom(const ScheduleRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ScheduleRequest* other);
  void UnsafeMergeFrom(const ScheduleRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:firmament.ScheduleRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void  protobuf_AddDesc_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void protobuf_AssignDesc_scheduling_2ffirmament_5fscheduler_2eproto();
  friend void protobuf_ShutdownFile_scheduling_2ffirmament_5fscheduler_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ScheduleRequest> ScheduleRequest_default_instance_;

// -------------------------------------------------------------------

class SchedulingDeltas : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:firmament.SchedulingDeltas) */ {
 public:
  SchedulingDeltas();
  virtual ~SchedulingDeltas();

  SchedulingDeltas(const SchedulingDeltas& from);

  inline SchedulingDeltas& operator=(const SchedulingDeltas& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SchedulingDeltas& default_instance();

  static const SchedulingDeltas* internal_default_instance();

  void Swap(SchedulingDeltas* other);

  // implements Message ----------------------------------------------

  inline SchedulingDeltas* New() const { return New(NULL); }

  SchedulingDeltas* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SchedulingDeltas& from);
  void MergeFrom(const SchedulingDeltas& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SchedulingDeltas* other);
  void UnsafeMergeFrom(const SchedulingDeltas& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .firmament.SchedulingDelta deltas = 1;
  int deltas_size() const;
  void clear_deltas();
  static const int kDeltasFieldNumber = 1;
  const ::firmament::SchedulingDelta& deltas(int index) const;
  ::firmament::SchedulingDelta* mutable_deltas(int index);
  ::firmament::SchedulingDelta* add_deltas();
  ::google::protobuf::RepeatedPtrField< ::firmament::SchedulingDelta >*
      mutable_deltas();
  const ::google::protobuf::RepeatedPtrField< ::firmament::SchedulingDelta >&
      deltas() const;

  // @@protoc_insertion_point(class_scope:firmament.SchedulingDeltas)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::firmament::SchedulingDelta > deltas_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void  protobuf_AddDesc_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void protobuf_AssignDesc_scheduling_2ffirmament_5fscheduler_2eproto();
  friend void protobuf_ShutdownFile_scheduling_2ffirmament_5fscheduler_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SchedulingDeltas> SchedulingDeltas_default_instance_;

// -------------------------------------------------------------------

class TaskCompletedResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:firmament.TaskCompletedResponse) */ {
 public:
  TaskCompletedResponse();
  virtual ~TaskCompletedResponse();

  TaskCompletedResponse(const TaskCompletedResponse& from);

  inline TaskCompletedResponse& operator=(const TaskCompletedResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskCompletedResponse& default_instance();

  static const TaskCompletedResponse* internal_default_instance();

  void Swap(TaskCompletedResponse* other);

  // implements Message ----------------------------------------------

  inline TaskCompletedResponse* New() const { return New(NULL); }

  TaskCompletedResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskCompletedResponse& from);
  void MergeFrom(const TaskCompletedResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaskCompletedResponse* other);
  void UnsafeMergeFrom(const TaskCompletedResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .firmament.TaskReplyType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::firmament::TaskReplyType type() const;
  void set_type(::firmament::TaskReplyType value);

  // @@protoc_insertion_point(class_scope:firmament.TaskCompletedResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void  protobuf_AddDesc_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void protobuf_AssignDesc_scheduling_2ffirmament_5fscheduler_2eproto();
  friend void protobuf_ShutdownFile_scheduling_2ffirmament_5fscheduler_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TaskCompletedResponse> TaskCompletedResponse_default_instance_;

// -------------------------------------------------------------------

class TaskDescription : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:firmament.TaskDescription) */ {
 public:
  TaskDescription();
  virtual ~TaskDescription();

  TaskDescription(const TaskDescription& from);

  inline TaskDescription& operator=(const TaskDescription& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskDescription& default_instance();

  static const TaskDescription* internal_default_instance();

  void Swap(TaskDescription* other);

  // implements Message ----------------------------------------------

  inline TaskDescription* New() const { return New(NULL); }

  TaskDescription* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskDescription& from);
  void MergeFrom(const TaskDescription& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaskDescription* other);
  void UnsafeMergeFrom(const TaskDescription& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .firmament.TaskDescriptor task_descriptor = 1;
  bool has_task_descriptor() const;
  void clear_task_descriptor();
  static const int kTaskDescriptorFieldNumber = 1;
  const ::firmament::TaskDescriptor& task_descriptor() const;
  ::firmament::TaskDescriptor* mutable_task_descriptor();
  ::firmament::TaskDescriptor* release_task_descriptor();
  void set_allocated_task_descriptor(::firmament::TaskDescriptor* task_descriptor);

  // optional .firmament.JobDescriptor job_descriptor = 2;
  bool has_job_descriptor() const;
  void clear_job_descriptor();
  static const int kJobDescriptorFieldNumber = 2;
  const ::firmament::JobDescriptor& job_descriptor() const;
  ::firmament::JobDescriptor* mutable_job_descriptor();
  ::firmament::JobDescriptor* release_job_descriptor();
  void set_allocated_job_descriptor(::firmament::JobDescriptor* job_descriptor);

  // @@protoc_insertion_point(class_scope:firmament.TaskDescription)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::firmament::TaskDescriptor* task_descriptor_;
  ::firmament::JobDescriptor* job_descriptor_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void  protobuf_AddDesc_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void protobuf_AssignDesc_scheduling_2ffirmament_5fscheduler_2eproto();
  friend void protobuf_ShutdownFile_scheduling_2ffirmament_5fscheduler_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TaskDescription> TaskDescription_default_instance_;

// -------------------------------------------------------------------

class TaskSubmittedResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:firmament.TaskSubmittedResponse) */ {
 public:
  TaskSubmittedResponse();
  virtual ~TaskSubmittedResponse();

  TaskSubmittedResponse(const TaskSubmittedResponse& from);

  inline TaskSubmittedResponse& operator=(const TaskSubmittedResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskSubmittedResponse& default_instance();

  static const TaskSubmittedResponse* internal_default_instance();

  void Swap(TaskSubmittedResponse* other);

  // implements Message ----------------------------------------------

  inline TaskSubmittedResponse* New() const { return New(NULL); }

  TaskSubmittedResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskSubmittedResponse& from);
  void MergeFrom(const TaskSubmittedResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaskSubmittedResponse* other);
  void UnsafeMergeFrom(const TaskSubmittedResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .firmament.TaskReplyType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::firmament::TaskReplyType type() const;
  void set_type(::firmament::TaskReplyType value);

  // @@protoc_insertion_point(class_scope:firmament.TaskSubmittedResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void  protobuf_AddDesc_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void protobuf_AssignDesc_scheduling_2ffirmament_5fscheduler_2eproto();
  friend void protobuf_ShutdownFile_scheduling_2ffirmament_5fscheduler_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TaskSubmittedResponse> TaskSubmittedResponse_default_instance_;

// -------------------------------------------------------------------

class TaskRemovedResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:firmament.TaskRemovedResponse) */ {
 public:
  TaskRemovedResponse();
  virtual ~TaskRemovedResponse();

  TaskRemovedResponse(const TaskRemovedResponse& from);

  inline TaskRemovedResponse& operator=(const TaskRemovedResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskRemovedResponse& default_instance();

  static const TaskRemovedResponse* internal_default_instance();

  void Swap(TaskRemovedResponse* other);

  // implements Message ----------------------------------------------

  inline TaskRemovedResponse* New() const { return New(NULL); }

  TaskRemovedResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskRemovedResponse& from);
  void MergeFrom(const TaskRemovedResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaskRemovedResponse* other);
  void UnsafeMergeFrom(const TaskRemovedResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .firmament.TaskReplyType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::firmament::TaskReplyType type() const;
  void set_type(::firmament::TaskReplyType value);

  // @@protoc_insertion_point(class_scope:firmament.TaskRemovedResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void  protobuf_AddDesc_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void protobuf_AssignDesc_scheduling_2ffirmament_5fscheduler_2eproto();
  friend void protobuf_ShutdownFile_scheduling_2ffirmament_5fscheduler_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TaskRemovedResponse> TaskRemovedResponse_default_instance_;

// -------------------------------------------------------------------

class TaskFailedResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:firmament.TaskFailedResponse) */ {
 public:
  TaskFailedResponse();
  virtual ~TaskFailedResponse();

  TaskFailedResponse(const TaskFailedResponse& from);

  inline TaskFailedResponse& operator=(const TaskFailedResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskFailedResponse& default_instance();

  static const TaskFailedResponse* internal_default_instance();

  void Swap(TaskFailedResponse* other);

  // implements Message ----------------------------------------------

  inline TaskFailedResponse* New() const { return New(NULL); }

  TaskFailedResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskFailedResponse& from);
  void MergeFrom(const TaskFailedResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaskFailedResponse* other);
  void UnsafeMergeFrom(const TaskFailedResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .firmament.TaskReplyType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::firmament::TaskReplyType type() const;
  void set_type(::firmament::TaskReplyType value);

  // @@protoc_insertion_point(class_scope:firmament.TaskFailedResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void  protobuf_AddDesc_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void protobuf_AssignDesc_scheduling_2ffirmament_5fscheduler_2eproto();
  friend void protobuf_ShutdownFile_scheduling_2ffirmament_5fscheduler_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TaskFailedResponse> TaskFailedResponse_default_instance_;

// -------------------------------------------------------------------

class TaskUpdatedResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:firmament.TaskUpdatedResponse) */ {
 public:
  TaskUpdatedResponse();
  virtual ~TaskUpdatedResponse();

  TaskUpdatedResponse(const TaskUpdatedResponse& from);

  inline TaskUpdatedResponse& operator=(const TaskUpdatedResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskUpdatedResponse& default_instance();

  static const TaskUpdatedResponse* internal_default_instance();

  void Swap(TaskUpdatedResponse* other);

  // implements Message ----------------------------------------------

  inline TaskUpdatedResponse* New() const { return New(NULL); }

  TaskUpdatedResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskUpdatedResponse& from);
  void MergeFrom(const TaskUpdatedResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaskUpdatedResponse* other);
  void UnsafeMergeFrom(const TaskUpdatedResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .firmament.TaskReplyType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::firmament::TaskReplyType type() const;
  void set_type(::firmament::TaskReplyType value);

  // @@protoc_insertion_point(class_scope:firmament.TaskUpdatedResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void  protobuf_AddDesc_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void protobuf_AssignDesc_scheduling_2ffirmament_5fscheduler_2eproto();
  friend void protobuf_ShutdownFile_scheduling_2ffirmament_5fscheduler_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TaskUpdatedResponse> TaskUpdatedResponse_default_instance_;

// -------------------------------------------------------------------

class NodeAddedResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:firmament.NodeAddedResponse) */ {
 public:
  NodeAddedResponse();
  virtual ~NodeAddedResponse();

  NodeAddedResponse(const NodeAddedResponse& from);

  inline NodeAddedResponse& operator=(const NodeAddedResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeAddedResponse& default_instance();

  static const NodeAddedResponse* internal_default_instance();

  void Swap(NodeAddedResponse* other);

  // implements Message ----------------------------------------------

  inline NodeAddedResponse* New() const { return New(NULL); }

  NodeAddedResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NodeAddedResponse& from);
  void MergeFrom(const NodeAddedResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NodeAddedResponse* other);
  void UnsafeMergeFrom(const NodeAddedResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .firmament.NodeReplyType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::firmament::NodeReplyType type() const;
  void set_type(::firmament::NodeReplyType value);

  // @@protoc_insertion_point(class_scope:firmament.NodeAddedResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void  protobuf_AddDesc_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void protobuf_AssignDesc_scheduling_2ffirmament_5fscheduler_2eproto();
  friend void protobuf_ShutdownFile_scheduling_2ffirmament_5fscheduler_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<NodeAddedResponse> NodeAddedResponse_default_instance_;

// -------------------------------------------------------------------

class NodeRemovedResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:firmament.NodeRemovedResponse) */ {
 public:
  NodeRemovedResponse();
  virtual ~NodeRemovedResponse();

  NodeRemovedResponse(const NodeRemovedResponse& from);

  inline NodeRemovedResponse& operator=(const NodeRemovedResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeRemovedResponse& default_instance();

  static const NodeRemovedResponse* internal_default_instance();

  void Swap(NodeRemovedResponse* other);

  // implements Message ----------------------------------------------

  inline NodeRemovedResponse* New() const { return New(NULL); }

  NodeRemovedResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NodeRemovedResponse& from);
  void MergeFrom(const NodeRemovedResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NodeRemovedResponse* other);
  void UnsafeMergeFrom(const NodeRemovedResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .firmament.NodeReplyType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::firmament::NodeReplyType type() const;
  void set_type(::firmament::NodeReplyType value);

  // @@protoc_insertion_point(class_scope:firmament.NodeRemovedResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void  protobuf_AddDesc_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void protobuf_AssignDesc_scheduling_2ffirmament_5fscheduler_2eproto();
  friend void protobuf_ShutdownFile_scheduling_2ffirmament_5fscheduler_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<NodeRemovedResponse> NodeRemovedResponse_default_instance_;

// -------------------------------------------------------------------

class NodeFailedResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:firmament.NodeFailedResponse) */ {
 public:
  NodeFailedResponse();
  virtual ~NodeFailedResponse();

  NodeFailedResponse(const NodeFailedResponse& from);

  inline NodeFailedResponse& operator=(const NodeFailedResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeFailedResponse& default_instance();

  static const NodeFailedResponse* internal_default_instance();

  void Swap(NodeFailedResponse* other);

  // implements Message ----------------------------------------------

  inline NodeFailedResponse* New() const { return New(NULL); }

  NodeFailedResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NodeFailedResponse& from);
  void MergeFrom(const NodeFailedResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NodeFailedResponse* other);
  void UnsafeMergeFrom(const NodeFailedResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .firmament.NodeReplyType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::firmament::NodeReplyType type() const;
  void set_type(::firmament::NodeReplyType value);

  // @@protoc_insertion_point(class_scope:firmament.NodeFailedResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void  protobuf_AddDesc_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void protobuf_AssignDesc_scheduling_2ffirmament_5fscheduler_2eproto();
  friend void protobuf_ShutdownFile_scheduling_2ffirmament_5fscheduler_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<NodeFailedResponse> NodeFailedResponse_default_instance_;

// -------------------------------------------------------------------

class NodeUpdatedResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:firmament.NodeUpdatedResponse) */ {
 public:
  NodeUpdatedResponse();
  virtual ~NodeUpdatedResponse();

  NodeUpdatedResponse(const NodeUpdatedResponse& from);

  inline NodeUpdatedResponse& operator=(const NodeUpdatedResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeUpdatedResponse& default_instance();

  static const NodeUpdatedResponse* internal_default_instance();

  void Swap(NodeUpdatedResponse* other);

  // implements Message ----------------------------------------------

  inline NodeUpdatedResponse* New() const { return New(NULL); }

  NodeUpdatedResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NodeUpdatedResponse& from);
  void MergeFrom(const NodeUpdatedResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NodeUpdatedResponse* other);
  void UnsafeMergeFrom(const NodeUpdatedResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .firmament.NodeReplyType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::firmament::NodeReplyType type() const;
  void set_type(::firmament::NodeReplyType value);

  // @@protoc_insertion_point(class_scope:firmament.NodeUpdatedResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void  protobuf_AddDesc_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void protobuf_AssignDesc_scheduling_2ffirmament_5fscheduler_2eproto();
  friend void protobuf_ShutdownFile_scheduling_2ffirmament_5fscheduler_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<NodeUpdatedResponse> NodeUpdatedResponse_default_instance_;

// -------------------------------------------------------------------

class TaskStatsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:firmament.TaskStatsResponse) */ {
 public:
  TaskStatsResponse();
  virtual ~TaskStatsResponse();

  TaskStatsResponse(const TaskStatsResponse& from);

  inline TaskStatsResponse& operator=(const TaskStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskStatsResponse& default_instance();

  static const TaskStatsResponse* internal_default_instance();

  void Swap(TaskStatsResponse* other);

  // implements Message ----------------------------------------------

  inline TaskStatsResponse* New() const { return New(NULL); }

  TaskStatsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskStatsResponse& from);
  void MergeFrom(const TaskStatsResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaskStatsResponse* other);
  void UnsafeMergeFrom(const TaskStatsResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .firmament.TaskReplyType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::firmament::TaskReplyType type() const;
  void set_type(::firmament::TaskReplyType value);

  // @@protoc_insertion_point(class_scope:firmament.TaskStatsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void  protobuf_AddDesc_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void protobuf_AssignDesc_scheduling_2ffirmament_5fscheduler_2eproto();
  friend void protobuf_ShutdownFile_scheduling_2ffirmament_5fscheduler_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TaskStatsResponse> TaskStatsResponse_default_instance_;

// -------------------------------------------------------------------

class ResourceStatsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:firmament.ResourceStatsResponse) */ {
 public:
  ResourceStatsResponse();
  virtual ~ResourceStatsResponse();

  ResourceStatsResponse(const ResourceStatsResponse& from);

  inline ResourceStatsResponse& operator=(const ResourceStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceStatsResponse& default_instance();

  static const ResourceStatsResponse* internal_default_instance();

  void Swap(ResourceStatsResponse* other);

  // implements Message ----------------------------------------------

  inline ResourceStatsResponse* New() const { return New(NULL); }

  ResourceStatsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResourceStatsResponse& from);
  void MergeFrom(const ResourceStatsResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResourceStatsResponse* other);
  void UnsafeMergeFrom(const ResourceStatsResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .firmament.NodeReplyType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::firmament::NodeReplyType type() const;
  void set_type(::firmament::NodeReplyType value);

  // @@protoc_insertion_point(class_scope:firmament.ResourceStatsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void  protobuf_AddDesc_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void protobuf_AssignDesc_scheduling_2ffirmament_5fscheduler_2eproto();
  friend void protobuf_ShutdownFile_scheduling_2ffirmament_5fscheduler_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ResourceStatsResponse> ResourceStatsResponse_default_instance_;

// -------------------------------------------------------------------

class TaskUID : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:firmament.TaskUID) */ {
 public:
  TaskUID();
  virtual ~TaskUID();

  TaskUID(const TaskUID& from);

  inline TaskUID& operator=(const TaskUID& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskUID& default_instance();

  static const TaskUID* internal_default_instance();

  void Swap(TaskUID* other);

  // implements Message ----------------------------------------------

  inline TaskUID* New() const { return New(NULL); }

  TaskUID* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskUID& from);
  void MergeFrom(const TaskUID& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaskUID* other);
  void UnsafeMergeFrom(const TaskUID& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 task_uid = 1;
  void clear_task_uid();
  static const int kTaskUidFieldNumber = 1;
  ::google::protobuf::uint64 task_uid() const;
  void set_task_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:firmament.TaskUID)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 task_uid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void  protobuf_AddDesc_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void protobuf_AssignDesc_scheduling_2ffirmament_5fscheduler_2eproto();
  friend void protobuf_ShutdownFile_scheduling_2ffirmament_5fscheduler_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TaskUID> TaskUID_default_instance_;

// -------------------------------------------------------------------

class ResourceUID : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:firmament.ResourceUID) */ {
 public:
  ResourceUID();
  virtual ~ResourceUID();

  ResourceUID(const ResourceUID& from);

  inline ResourceUID& operator=(const ResourceUID& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceUID& default_instance();

  static const ResourceUID* internal_default_instance();

  void Swap(ResourceUID* other);

  // implements Message ----------------------------------------------

  inline ResourceUID* New() const { return New(NULL); }

  ResourceUID* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResourceUID& from);
  void MergeFrom(const ResourceUID& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResourceUID* other);
  void UnsafeMergeFrom(const ResourceUID& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string resource_uid = 1;
  void clear_resource_uid();
  static const int kResourceUidFieldNumber = 1;
  const ::std::string& resource_uid() const;
  void set_resource_uid(const ::std::string& value);
  void set_resource_uid(const char* value);
  void set_resource_uid(const char* value, size_t size);
  ::std::string* mutable_resource_uid();
  ::std::string* release_resource_uid();
  void set_allocated_resource_uid(::std::string* resource_uid);

  // @@protoc_insertion_point(class_scope:firmament.ResourceUID)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr resource_uid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void  protobuf_AddDesc_scheduling_2ffirmament_5fscheduler_2eproto_impl();
  friend void protobuf_AssignDesc_scheduling_2ffirmament_5fscheduler_2eproto();
  friend void protobuf_ShutdownFile_scheduling_2ffirmament_5fscheduler_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ResourceUID> ResourceUID_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ScheduleRequest

inline const ScheduleRequest* ScheduleRequest::internal_default_instance() {
  return &ScheduleRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// SchedulingDeltas

// repeated .firmament.SchedulingDelta deltas = 1;
inline int SchedulingDeltas::deltas_size() const {
  return deltas_.size();
}
inline void SchedulingDeltas::clear_deltas() {
  deltas_.Clear();
}
inline const ::firmament::SchedulingDelta& SchedulingDeltas::deltas(int index) const {
  // @@protoc_insertion_point(field_get:firmament.SchedulingDeltas.deltas)
  return deltas_.Get(index);
}
inline ::firmament::SchedulingDelta* SchedulingDeltas::mutable_deltas(int index) {
  // @@protoc_insertion_point(field_mutable:firmament.SchedulingDeltas.deltas)
  return deltas_.Mutable(index);
}
inline ::firmament::SchedulingDelta* SchedulingDeltas::add_deltas() {
  // @@protoc_insertion_point(field_add:firmament.SchedulingDeltas.deltas)
  return deltas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::firmament::SchedulingDelta >*
SchedulingDeltas::mutable_deltas() {
  // @@protoc_insertion_point(field_mutable_list:firmament.SchedulingDeltas.deltas)
  return &deltas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::firmament::SchedulingDelta >&
SchedulingDeltas::deltas() const {
  // @@protoc_insertion_point(field_list:firmament.SchedulingDeltas.deltas)
  return deltas_;
}

inline const SchedulingDeltas* SchedulingDeltas::internal_default_instance() {
  return &SchedulingDeltas_default_instance_.get();
}
// -------------------------------------------------------------------

// TaskCompletedResponse

// optional .firmament.TaskReplyType type = 1;
inline void TaskCompletedResponse::clear_type() {
  type_ = 0;
}
inline ::firmament::TaskReplyType TaskCompletedResponse::type() const {
  // @@protoc_insertion_point(field_get:firmament.TaskCompletedResponse.type)
  return static_cast< ::firmament::TaskReplyType >(type_);
}
inline void TaskCompletedResponse::set_type(::firmament::TaskReplyType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:firmament.TaskCompletedResponse.type)
}

inline const TaskCompletedResponse* TaskCompletedResponse::internal_default_instance() {
  return &TaskCompletedResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// TaskDescription

// optional .firmament.TaskDescriptor task_descriptor = 1;
inline bool TaskDescription::has_task_descriptor() const {
  return this != internal_default_instance() && task_descriptor_ != NULL;
}
inline void TaskDescription::clear_task_descriptor() {
  if (GetArenaNoVirtual() == NULL && task_descriptor_ != NULL) delete task_descriptor_;
  task_descriptor_ = NULL;
}
inline const ::firmament::TaskDescriptor& TaskDescription::task_descriptor() const {
  // @@protoc_insertion_point(field_get:firmament.TaskDescription.task_descriptor)
  return task_descriptor_ != NULL ? *task_descriptor_
                         : *::firmament::TaskDescriptor::internal_default_instance();
}
inline ::firmament::TaskDescriptor* TaskDescription::mutable_task_descriptor() {
  
  if (task_descriptor_ == NULL) {
    task_descriptor_ = new ::firmament::TaskDescriptor;
  }
  // @@protoc_insertion_point(field_mutable:firmament.TaskDescription.task_descriptor)
  return task_descriptor_;
}
inline ::firmament::TaskDescriptor* TaskDescription::release_task_descriptor() {
  // @@protoc_insertion_point(field_release:firmament.TaskDescription.task_descriptor)
  
  ::firmament::TaskDescriptor* temp = task_descriptor_;
  task_descriptor_ = NULL;
  return temp;
}
inline void TaskDescription::set_allocated_task_descriptor(::firmament::TaskDescriptor* task_descriptor) {
  delete task_descriptor_;
  task_descriptor_ = task_descriptor;
  if (task_descriptor) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:firmament.TaskDescription.task_descriptor)
}

// optional .firmament.JobDescriptor job_descriptor = 2;
inline bool TaskDescription::has_job_descriptor() const {
  return this != internal_default_instance() && job_descriptor_ != NULL;
}
inline void TaskDescription::clear_job_descriptor() {
  if (GetArenaNoVirtual() == NULL && job_descriptor_ != NULL) delete job_descriptor_;
  job_descriptor_ = NULL;
}
inline const ::firmament::JobDescriptor& TaskDescription::job_descriptor() const {
  // @@protoc_insertion_point(field_get:firmament.TaskDescription.job_descriptor)
  return job_descriptor_ != NULL ? *job_descriptor_
                         : *::firmament::JobDescriptor::internal_default_instance();
}
inline ::firmament::JobDescriptor* TaskDescription::mutable_job_descriptor() {
  
  if (job_descriptor_ == NULL) {
    job_descriptor_ = new ::firmament::JobDescriptor;
  }
  // @@protoc_insertion_point(field_mutable:firmament.TaskDescription.job_descriptor)
  return job_descriptor_;
}
inline ::firmament::JobDescriptor* TaskDescription::release_job_descriptor() {
  // @@protoc_insertion_point(field_release:firmament.TaskDescription.job_descriptor)
  
  ::firmament::JobDescriptor* temp = job_descriptor_;
  job_descriptor_ = NULL;
  return temp;
}
inline void TaskDescription::set_allocated_job_descriptor(::firmament::JobDescriptor* job_descriptor) {
  delete job_descriptor_;
  job_descriptor_ = job_descriptor;
  if (job_descriptor) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:firmament.TaskDescription.job_descriptor)
}

inline const TaskDescription* TaskDescription::internal_default_instance() {
  return &TaskDescription_default_instance_.get();
}
// -------------------------------------------------------------------

// TaskSubmittedResponse

// optional .firmament.TaskReplyType type = 1;
inline void TaskSubmittedResponse::clear_type() {
  type_ = 0;
}
inline ::firmament::TaskReplyType TaskSubmittedResponse::type() const {
  // @@protoc_insertion_point(field_get:firmament.TaskSubmittedResponse.type)
  return static_cast< ::firmament::TaskReplyType >(type_);
}
inline void TaskSubmittedResponse::set_type(::firmament::TaskReplyType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:firmament.TaskSubmittedResponse.type)
}

inline const TaskSubmittedResponse* TaskSubmittedResponse::internal_default_instance() {
  return &TaskSubmittedResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// TaskRemovedResponse

// optional .firmament.TaskReplyType type = 1;
inline void TaskRemovedResponse::clear_type() {
  type_ = 0;
}
inline ::firmament::TaskReplyType TaskRemovedResponse::type() const {
  // @@protoc_insertion_point(field_get:firmament.TaskRemovedResponse.type)
  return static_cast< ::firmament::TaskReplyType >(type_);
}
inline void TaskRemovedResponse::set_type(::firmament::TaskReplyType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:firmament.TaskRemovedResponse.type)
}

inline const TaskRemovedResponse* TaskRemovedResponse::internal_default_instance() {
  return &TaskRemovedResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// TaskFailedResponse

// optional .firmament.TaskReplyType type = 1;
inline void TaskFailedResponse::clear_type() {
  type_ = 0;
}
inline ::firmament::TaskReplyType TaskFailedResponse::type() const {
  // @@protoc_insertion_point(field_get:firmament.TaskFailedResponse.type)
  return static_cast< ::firmament::TaskReplyType >(type_);
}
inline void TaskFailedResponse::set_type(::firmament::TaskReplyType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:firmament.TaskFailedResponse.type)
}

inline const TaskFailedResponse* TaskFailedResponse::internal_default_instance() {
  return &TaskFailedResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// TaskUpdatedResponse

// optional .firmament.TaskReplyType type = 1;
inline void TaskUpdatedResponse::clear_type() {
  type_ = 0;
}
inline ::firmament::TaskReplyType TaskUpdatedResponse::type() const {
  // @@protoc_insertion_point(field_get:firmament.TaskUpdatedResponse.type)
  return static_cast< ::firmament::TaskReplyType >(type_);
}
inline void TaskUpdatedResponse::set_type(::firmament::TaskReplyType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:firmament.TaskUpdatedResponse.type)
}

inline const TaskUpdatedResponse* TaskUpdatedResponse::internal_default_instance() {
  return &TaskUpdatedResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// NodeAddedResponse

// optional .firmament.NodeReplyType type = 1;
inline void NodeAddedResponse::clear_type() {
  type_ = 0;
}
inline ::firmament::NodeReplyType NodeAddedResponse::type() const {
  // @@protoc_insertion_point(field_get:firmament.NodeAddedResponse.type)
  return static_cast< ::firmament::NodeReplyType >(type_);
}
inline void NodeAddedResponse::set_type(::firmament::NodeReplyType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:firmament.NodeAddedResponse.type)
}

inline const NodeAddedResponse* NodeAddedResponse::internal_default_instance() {
  return &NodeAddedResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// NodeRemovedResponse

// optional .firmament.NodeReplyType type = 1;
inline void NodeRemovedResponse::clear_type() {
  type_ = 0;
}
inline ::firmament::NodeReplyType NodeRemovedResponse::type() const {
  // @@protoc_insertion_point(field_get:firmament.NodeRemovedResponse.type)
  return static_cast< ::firmament::NodeReplyType >(type_);
}
inline void NodeRemovedResponse::set_type(::firmament::NodeReplyType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:firmament.NodeRemovedResponse.type)
}

inline const NodeRemovedResponse* NodeRemovedResponse::internal_default_instance() {
  return &NodeRemovedResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// NodeFailedResponse

// optional .firmament.NodeReplyType type = 1;
inline void NodeFailedResponse::clear_type() {
  type_ = 0;
}
inline ::firmament::NodeReplyType NodeFailedResponse::type() const {
  // @@protoc_insertion_point(field_get:firmament.NodeFailedResponse.type)
  return static_cast< ::firmament::NodeReplyType >(type_);
}
inline void NodeFailedResponse::set_type(::firmament::NodeReplyType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:firmament.NodeFailedResponse.type)
}

inline const NodeFailedResponse* NodeFailedResponse::internal_default_instance() {
  return &NodeFailedResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// NodeUpdatedResponse

// optional .firmament.NodeReplyType type = 1;
inline void NodeUpdatedResponse::clear_type() {
  type_ = 0;
}
inline ::firmament::NodeReplyType NodeUpdatedResponse::type() const {
  // @@protoc_insertion_point(field_get:firmament.NodeUpdatedResponse.type)
  return static_cast< ::firmament::NodeReplyType >(type_);
}
inline void NodeUpdatedResponse::set_type(::firmament::NodeReplyType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:firmament.NodeUpdatedResponse.type)
}

inline const NodeUpdatedResponse* NodeUpdatedResponse::internal_default_instance() {
  return &NodeUpdatedResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// TaskStatsResponse

// optional .firmament.TaskReplyType type = 1;
inline void TaskStatsResponse::clear_type() {
  type_ = 0;
}
inline ::firmament::TaskReplyType TaskStatsResponse::type() const {
  // @@protoc_insertion_point(field_get:firmament.TaskStatsResponse.type)
  return static_cast< ::firmament::TaskReplyType >(type_);
}
inline void TaskStatsResponse::set_type(::firmament::TaskReplyType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:firmament.TaskStatsResponse.type)
}

inline const TaskStatsResponse* TaskStatsResponse::internal_default_instance() {
  return &TaskStatsResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// ResourceStatsResponse

// optional .firmament.NodeReplyType type = 1;
inline void ResourceStatsResponse::clear_type() {
  type_ = 0;
}
inline ::firmament::NodeReplyType ResourceStatsResponse::type() const {
  // @@protoc_insertion_point(field_get:firmament.ResourceStatsResponse.type)
  return static_cast< ::firmament::NodeReplyType >(type_);
}
inline void ResourceStatsResponse::set_type(::firmament::NodeReplyType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:firmament.ResourceStatsResponse.type)
}

inline const ResourceStatsResponse* ResourceStatsResponse::internal_default_instance() {
  return &ResourceStatsResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// TaskUID

// optional uint64 task_uid = 1;
inline void TaskUID::clear_task_uid() {
  task_uid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TaskUID::task_uid() const {
  // @@protoc_insertion_point(field_get:firmament.TaskUID.task_uid)
  return task_uid_;
}
inline void TaskUID::set_task_uid(::google::protobuf::uint64 value) {
  
  task_uid_ = value;
  // @@protoc_insertion_point(field_set:firmament.TaskUID.task_uid)
}

inline const TaskUID* TaskUID::internal_default_instance() {
  return &TaskUID_default_instance_.get();
}
// -------------------------------------------------------------------

// ResourceUID

// optional string resource_uid = 1;
inline void ResourceUID::clear_resource_uid() {
  resource_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResourceUID::resource_uid() const {
  // @@protoc_insertion_point(field_get:firmament.ResourceUID.resource_uid)
  return resource_uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResourceUID::set_resource_uid(const ::std::string& value) {
  
  resource_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:firmament.ResourceUID.resource_uid)
}
inline void ResourceUID::set_resource_uid(const char* value) {
  
  resource_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:firmament.ResourceUID.resource_uid)
}
inline void ResourceUID::set_resource_uid(const char* value, size_t size) {
  
  resource_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:firmament.ResourceUID.resource_uid)
}
inline ::std::string* ResourceUID::mutable_resource_uid() {
  
  // @@protoc_insertion_point(field_mutable:firmament.ResourceUID.resource_uid)
  return resource_uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResourceUID::release_resource_uid() {
  // @@protoc_insertion_point(field_release:firmament.ResourceUID.resource_uid)
  
  return resource_uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResourceUID::set_allocated_resource_uid(::std::string* resource_uid) {
  if (resource_uid != NULL) {
    
  } else {
    
  }
  resource_uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_uid);
  // @@protoc_insertion_point(field_set_allocated:firmament.ResourceUID.resource_uid)
}

inline const ResourceUID* ResourceUID::internal_default_instance() {
  return &ResourceUID_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace firmament

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::firmament::TaskReplyType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::firmament::TaskReplyType>() {
  return ::firmament::TaskReplyType_descriptor();
}
template <> struct is_proto_enum< ::firmament::NodeReplyType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::firmament::NodeReplyType>() {
  return ::firmament::NodeReplyType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_scheduling_2ffirmament_5fscheduler_2eproto__INCLUDED
