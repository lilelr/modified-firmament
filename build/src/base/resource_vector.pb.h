// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: base/resource_vector.proto

#ifndef PROTOBUF_base_2fresource_5fvector_2eproto__INCLUDED
#define PROTOBUF_base_2fresource_5fvector_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace firmament {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_base_2fresource_5fvector_2eproto();
void protobuf_InitDefaults_base_2fresource_5fvector_2eproto();
void protobuf_AssignDesc_base_2fresource_5fvector_2eproto();
void protobuf_ShutdownFile_base_2fresource_5fvector_2eproto();

class ResourceVector;

// ===================================================================

class ResourceVector : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:firmament.ResourceVector) */ {
 public:
  ResourceVector();
  virtual ~ResourceVector();

  ResourceVector(const ResourceVector& from);

  inline ResourceVector& operator=(const ResourceVector& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceVector& default_instance();

  static const ResourceVector* internal_default_instance();

  void Swap(ResourceVector* other);

  // implements Message ----------------------------------------------

  inline ResourceVector* New() const { return New(NULL); }

  ResourceVector* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResourceVector& from);
  void MergeFrom(const ResourceVector& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResourceVector* other);
  void UnsafeMergeFrom(const ResourceVector& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float cpu_cores = 1;
  void clear_cpu_cores();
  static const int kCpuCoresFieldNumber = 1;
  float cpu_cores() const;
  void set_cpu_cores(float value);

  // optional uint64 ram_bw = 2;
  void clear_ram_bw();
  static const int kRamBwFieldNumber = 2;
  ::google::protobuf::uint64 ram_bw() const;
  void set_ram_bw(::google::protobuf::uint64 value);

  // optional uint64 ram_cap = 3;
  void clear_ram_cap();
  static const int kRamCapFieldNumber = 3;
  ::google::protobuf::uint64 ram_cap() const;
  void set_ram_cap(::google::protobuf::uint64 value);

  // optional uint64 disk_bw = 4;
  void clear_disk_bw();
  static const int kDiskBwFieldNumber = 4;
  ::google::protobuf::uint64 disk_bw() const;
  void set_disk_bw(::google::protobuf::uint64 value);

  // optional uint64 disk_cap = 5;
  void clear_disk_cap();
  static const int kDiskCapFieldNumber = 5;
  ::google::protobuf::uint64 disk_cap() const;
  void set_disk_cap(::google::protobuf::uint64 value);

  // optional uint64 net_tx_bw = 6;
  void clear_net_tx_bw();
  static const int kNetTxBwFieldNumber = 6;
  ::google::protobuf::uint64 net_tx_bw() const;
  void set_net_tx_bw(::google::protobuf::uint64 value);

  // optional uint64 net_rx_bw = 7;
  void clear_net_rx_bw();
  static const int kNetRxBwFieldNumber = 7;
  ::google::protobuf::uint64 net_rx_bw() const;
  void set_net_rx_bw(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:firmament.ResourceVector)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 ram_bw_;
  ::google::protobuf::uint64 ram_cap_;
  ::google::protobuf::uint64 disk_bw_;
  ::google::protobuf::uint64 disk_cap_;
  ::google::protobuf::uint64 net_tx_bw_;
  ::google::protobuf::uint64 net_rx_bw_;
  float cpu_cores_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_base_2fresource_5fvector_2eproto_impl();
  friend void  protobuf_AddDesc_base_2fresource_5fvector_2eproto_impl();
  friend void protobuf_AssignDesc_base_2fresource_5fvector_2eproto();
  friend void protobuf_ShutdownFile_base_2fresource_5fvector_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ResourceVector> ResourceVector_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ResourceVector

// optional float cpu_cores = 1;
inline void ResourceVector::clear_cpu_cores() {
  cpu_cores_ = 0;
}
inline float ResourceVector::cpu_cores() const {
  // @@protoc_insertion_point(field_get:firmament.ResourceVector.cpu_cores)
  return cpu_cores_;
}
inline void ResourceVector::set_cpu_cores(float value) {
  
  cpu_cores_ = value;
  // @@protoc_insertion_point(field_set:firmament.ResourceVector.cpu_cores)
}

// optional uint64 ram_bw = 2;
inline void ResourceVector::clear_ram_bw() {
  ram_bw_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ResourceVector::ram_bw() const {
  // @@protoc_insertion_point(field_get:firmament.ResourceVector.ram_bw)
  return ram_bw_;
}
inline void ResourceVector::set_ram_bw(::google::protobuf::uint64 value) {
  
  ram_bw_ = value;
  // @@protoc_insertion_point(field_set:firmament.ResourceVector.ram_bw)
}

// optional uint64 ram_cap = 3;
inline void ResourceVector::clear_ram_cap() {
  ram_cap_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ResourceVector::ram_cap() const {
  // @@protoc_insertion_point(field_get:firmament.ResourceVector.ram_cap)
  return ram_cap_;
}
inline void ResourceVector::set_ram_cap(::google::protobuf::uint64 value) {
  
  ram_cap_ = value;
  // @@protoc_insertion_point(field_set:firmament.ResourceVector.ram_cap)
}

// optional uint64 disk_bw = 4;
inline void ResourceVector::clear_disk_bw() {
  disk_bw_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ResourceVector::disk_bw() const {
  // @@protoc_insertion_point(field_get:firmament.ResourceVector.disk_bw)
  return disk_bw_;
}
inline void ResourceVector::set_disk_bw(::google::protobuf::uint64 value) {
  
  disk_bw_ = value;
  // @@protoc_insertion_point(field_set:firmament.ResourceVector.disk_bw)
}

// optional uint64 disk_cap = 5;
inline void ResourceVector::clear_disk_cap() {
  disk_cap_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ResourceVector::disk_cap() const {
  // @@protoc_insertion_point(field_get:firmament.ResourceVector.disk_cap)
  return disk_cap_;
}
inline void ResourceVector::set_disk_cap(::google::protobuf::uint64 value) {
  
  disk_cap_ = value;
  // @@protoc_insertion_point(field_set:firmament.ResourceVector.disk_cap)
}

// optional uint64 net_tx_bw = 6;
inline void ResourceVector::clear_net_tx_bw() {
  net_tx_bw_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ResourceVector::net_tx_bw() const {
  // @@protoc_insertion_point(field_get:firmament.ResourceVector.net_tx_bw)
  return net_tx_bw_;
}
inline void ResourceVector::set_net_tx_bw(::google::protobuf::uint64 value) {
  
  net_tx_bw_ = value;
  // @@protoc_insertion_point(field_set:firmament.ResourceVector.net_tx_bw)
}

// optional uint64 net_rx_bw = 7;
inline void ResourceVector::clear_net_rx_bw() {
  net_rx_bw_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ResourceVector::net_rx_bw() const {
  // @@protoc_insertion_point(field_get:firmament.ResourceVector.net_rx_bw)
  return net_rx_bw_;
}
inline void ResourceVector::set_net_rx_bw(::google::protobuf::uint64 value) {
  
  net_rx_bw_ = value;
  // @@protoc_insertion_point(field_set:firmament.ResourceVector.net_rx_bw)
}

inline const ResourceVector* ResourceVector::internal_default_instance() {
  return &ResourceVector_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace firmament

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_base_2fresource_5fvector_2eproto__INCLUDED
