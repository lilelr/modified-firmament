// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: base/resource_vector.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "base/resource_vector.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace firmament {

namespace {

const ::google::protobuf::Descriptor* ResourceVector_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResourceVector_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_base_2fresource_5fvector_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_base_2fresource_5fvector_2eproto() {
  protobuf_AddDesc_base_2fresource_5fvector_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "base/resource_vector.proto");
  GOOGLE_CHECK(file != NULL);
  ResourceVector_descriptor_ = file->message_type(0);
  static const int ResourceVector_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceVector, cpu_cores_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceVector, ram_bw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceVector, ram_cap_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceVector, disk_bw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceVector, disk_cap_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceVector, net_tx_bw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceVector, net_rx_bw_),
  };
  ResourceVector_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResourceVector_descriptor_,
      ResourceVector::internal_default_instance(),
      ResourceVector_offsets_,
      -1,
      -1,
      -1,
      sizeof(ResourceVector),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceVector, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_base_2fresource_5fvector_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResourceVector_descriptor_, ResourceVector::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_base_2fresource_5fvector_2eproto() {
  ResourceVector_default_instance_.Shutdown();
  delete ResourceVector_reflection_;
}

void protobuf_InitDefaults_base_2fresource_5fvector_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ResourceVector_default_instance_.DefaultConstruct();
  ResourceVector_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_base_2fresource_5fvector_2eproto_once_);
void protobuf_InitDefaults_base_2fresource_5fvector_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_base_2fresource_5fvector_2eproto_once_,
                 &protobuf_InitDefaults_base_2fresource_5fvector_2eproto_impl);
}
void protobuf_AddDesc_base_2fresource_5fvector_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_base_2fresource_5fvector_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032base/resource_vector.proto\022\tfirmament\""
    "\215\001\n\016ResourceVector\022\021\n\tcpu_cores\030\001 \001(\002\022\016\n"
    "\006ram_bw\030\002 \001(\004\022\017\n\007ram_cap\030\003 \001(\004\022\017\n\007disk_b"
    "w\030\004 \001(\004\022\020\n\010disk_cap\030\005 \001(\004\022\021\n\tnet_tx_bw\030\006"
    " \001(\004\022\021\n\tnet_rx_bw\030\007 \001(\004b\006proto3", 191);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "base/resource_vector.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_base_2fresource_5fvector_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_base_2fresource_5fvector_2eproto_once_);
void protobuf_AddDesc_base_2fresource_5fvector_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_base_2fresource_5fvector_2eproto_once_,
                 &protobuf_AddDesc_base_2fresource_5fvector_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_base_2fresource_5fvector_2eproto {
  StaticDescriptorInitializer_base_2fresource_5fvector_2eproto() {
    protobuf_AddDesc_base_2fresource_5fvector_2eproto();
  }
} static_descriptor_initializer_base_2fresource_5fvector_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceVector::kCpuCoresFieldNumber;
const int ResourceVector::kRamBwFieldNumber;
const int ResourceVector::kRamCapFieldNumber;
const int ResourceVector::kDiskBwFieldNumber;
const int ResourceVector::kDiskCapFieldNumber;
const int ResourceVector::kNetTxBwFieldNumber;
const int ResourceVector::kNetRxBwFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceVector::ResourceVector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_base_2fresource_5fvector_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:firmament.ResourceVector)
}

void ResourceVector::InitAsDefaultInstance() {
}

ResourceVector::ResourceVector(const ResourceVector& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:firmament.ResourceVector)
}

void ResourceVector::SharedCtor() {
  ::memset(&ram_bw_, 0, reinterpret_cast<char*>(&cpu_cores_) -
    reinterpret_cast<char*>(&ram_bw_) + sizeof(cpu_cores_));
  _cached_size_ = 0;
}

ResourceVector::~ResourceVector() {
  // @@protoc_insertion_point(destructor:firmament.ResourceVector)
  SharedDtor();
}

void ResourceVector::SharedDtor() {
}

void ResourceVector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResourceVector::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResourceVector_descriptor_;
}

const ResourceVector& ResourceVector::default_instance() {
  protobuf_InitDefaults_base_2fresource_5fvector_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ResourceVector> ResourceVector_default_instance_;

ResourceVector* ResourceVector::New(::google::protobuf::Arena* arena) const {
  ResourceVector* n = new ResourceVector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResourceVector::Clear() {
// @@protoc_insertion_point(message_clear_start:firmament.ResourceVector)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ResourceVector, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ResourceVector*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(ram_bw_, cpu_cores_);

#undef ZR_HELPER_
#undef ZR_

}

bool ResourceVector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:firmament.ResourceVector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float cpu_cores = 1;
      case 1: {
        if (tag == 13) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cpu_cores_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ram_bw;
        break;
      }

      // optional uint64 ram_bw = 2;
      case 2: {
        if (tag == 16) {
         parse_ram_bw:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ram_bw_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ram_cap;
        break;
      }

      // optional uint64 ram_cap = 3;
      case 3: {
        if (tag == 24) {
         parse_ram_cap:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ram_cap_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_disk_bw;
        break;
      }

      // optional uint64 disk_bw = 4;
      case 4: {
        if (tag == 32) {
         parse_disk_bw:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &disk_bw_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_disk_cap;
        break;
      }

      // optional uint64 disk_cap = 5;
      case 5: {
        if (tag == 40) {
         parse_disk_cap:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &disk_cap_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_net_tx_bw;
        break;
      }

      // optional uint64 net_tx_bw = 6;
      case 6: {
        if (tag == 48) {
         parse_net_tx_bw:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &net_tx_bw_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_net_rx_bw;
        break;
      }

      // optional uint64 net_rx_bw = 7;
      case 7: {
        if (tag == 56) {
         parse_net_rx_bw:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &net_rx_bw_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:firmament.ResourceVector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:firmament.ResourceVector)
  return false;
#undef DO_
}

void ResourceVector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:firmament.ResourceVector)
  // optional float cpu_cores = 1;
  if (this->cpu_cores() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->cpu_cores(), output);
  }

  // optional uint64 ram_bw = 2;
  if (this->ram_bw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ram_bw(), output);
  }

  // optional uint64 ram_cap = 3;
  if (this->ram_cap() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->ram_cap(), output);
  }

  // optional uint64 disk_bw = 4;
  if (this->disk_bw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->disk_bw(), output);
  }

  // optional uint64 disk_cap = 5;
  if (this->disk_cap() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->disk_cap(), output);
  }

  // optional uint64 net_tx_bw = 6;
  if (this->net_tx_bw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->net_tx_bw(), output);
  }

  // optional uint64 net_rx_bw = 7;
  if (this->net_rx_bw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->net_rx_bw(), output);
  }

  // @@protoc_insertion_point(serialize_end:firmament.ResourceVector)
}

::google::protobuf::uint8* ResourceVector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:firmament.ResourceVector)
  // optional float cpu_cores = 1;
  if (this->cpu_cores() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->cpu_cores(), target);
  }

  // optional uint64 ram_bw = 2;
  if (this->ram_bw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ram_bw(), target);
  }

  // optional uint64 ram_cap = 3;
  if (this->ram_cap() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->ram_cap(), target);
  }

  // optional uint64 disk_bw = 4;
  if (this->disk_bw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->disk_bw(), target);
  }

  // optional uint64 disk_cap = 5;
  if (this->disk_cap() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->disk_cap(), target);
  }

  // optional uint64 net_tx_bw = 6;
  if (this->net_tx_bw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->net_tx_bw(), target);
  }

  // optional uint64 net_rx_bw = 7;
  if (this->net_rx_bw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->net_rx_bw(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:firmament.ResourceVector)
  return target;
}

size_t ResourceVector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:firmament.ResourceVector)
  size_t total_size = 0;

  // optional float cpu_cores = 1;
  if (this->cpu_cores() != 0) {
    total_size += 1 + 4;
  }

  // optional uint64 ram_bw = 2;
  if (this->ram_bw() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ram_bw());
  }

  // optional uint64 ram_cap = 3;
  if (this->ram_cap() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ram_cap());
  }

  // optional uint64 disk_bw = 4;
  if (this->disk_bw() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->disk_bw());
  }

  // optional uint64 disk_cap = 5;
  if (this->disk_cap() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->disk_cap());
  }

  // optional uint64 net_tx_bw = 6;
  if (this->net_tx_bw() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->net_tx_bw());
  }

  // optional uint64 net_rx_bw = 7;
  if (this->net_rx_bw() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->net_rx_bw());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResourceVector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:firmament.ResourceVector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ResourceVector* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResourceVector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:firmament.ResourceVector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:firmament.ResourceVector)
    UnsafeMergeFrom(*source);
  }
}

void ResourceVector::MergeFrom(const ResourceVector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:firmament.ResourceVector)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ResourceVector::UnsafeMergeFrom(const ResourceVector& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.cpu_cores() != 0) {
    set_cpu_cores(from.cpu_cores());
  }
  if (from.ram_bw() != 0) {
    set_ram_bw(from.ram_bw());
  }
  if (from.ram_cap() != 0) {
    set_ram_cap(from.ram_cap());
  }
  if (from.disk_bw() != 0) {
    set_disk_bw(from.disk_bw());
  }
  if (from.disk_cap() != 0) {
    set_disk_cap(from.disk_cap());
  }
  if (from.net_tx_bw() != 0) {
    set_net_tx_bw(from.net_tx_bw());
  }
  if (from.net_rx_bw() != 0) {
    set_net_rx_bw(from.net_rx_bw());
  }
}

void ResourceVector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:firmament.ResourceVector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceVector::CopyFrom(const ResourceVector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:firmament.ResourceVector)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ResourceVector::IsInitialized() const {

  return true;
}

void ResourceVector::Swap(ResourceVector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceVector::InternalSwap(ResourceVector* other) {
  std::swap(cpu_cores_, other->cpu_cores_);
  std::swap(ram_bw_, other->ram_bw_);
  std::swap(ram_cap_, other->ram_cap_);
  std::swap(disk_bw_, other->disk_bw_);
  std::swap(disk_cap_, other->disk_cap_);
  std::swap(net_tx_bw_, other->net_tx_bw_);
  std::swap(net_rx_bw_, other->net_rx_bw_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResourceVector::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResourceVector_descriptor_;
  metadata.reflection = ResourceVector_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResourceVector

// optional float cpu_cores = 1;
void ResourceVector::clear_cpu_cores() {
  cpu_cores_ = 0;
}
float ResourceVector::cpu_cores() const {
  // @@protoc_insertion_point(field_get:firmament.ResourceVector.cpu_cores)
  return cpu_cores_;
}
void ResourceVector::set_cpu_cores(float value) {
  
  cpu_cores_ = value;
  // @@protoc_insertion_point(field_set:firmament.ResourceVector.cpu_cores)
}

// optional uint64 ram_bw = 2;
void ResourceVector::clear_ram_bw() {
  ram_bw_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ResourceVector::ram_bw() const {
  // @@protoc_insertion_point(field_get:firmament.ResourceVector.ram_bw)
  return ram_bw_;
}
void ResourceVector::set_ram_bw(::google::protobuf::uint64 value) {
  
  ram_bw_ = value;
  // @@protoc_insertion_point(field_set:firmament.ResourceVector.ram_bw)
}

// optional uint64 ram_cap = 3;
void ResourceVector::clear_ram_cap() {
  ram_cap_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ResourceVector::ram_cap() const {
  // @@protoc_insertion_point(field_get:firmament.ResourceVector.ram_cap)
  return ram_cap_;
}
void ResourceVector::set_ram_cap(::google::protobuf::uint64 value) {
  
  ram_cap_ = value;
  // @@protoc_insertion_point(field_set:firmament.ResourceVector.ram_cap)
}

// optional uint64 disk_bw = 4;
void ResourceVector::clear_disk_bw() {
  disk_bw_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ResourceVector::disk_bw() const {
  // @@protoc_insertion_point(field_get:firmament.ResourceVector.disk_bw)
  return disk_bw_;
}
void ResourceVector::set_disk_bw(::google::protobuf::uint64 value) {
  
  disk_bw_ = value;
  // @@protoc_insertion_point(field_set:firmament.ResourceVector.disk_bw)
}

// optional uint64 disk_cap = 5;
void ResourceVector::clear_disk_cap() {
  disk_cap_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ResourceVector::disk_cap() const {
  // @@protoc_insertion_point(field_get:firmament.ResourceVector.disk_cap)
  return disk_cap_;
}
void ResourceVector::set_disk_cap(::google::protobuf::uint64 value) {
  
  disk_cap_ = value;
  // @@protoc_insertion_point(field_set:firmament.ResourceVector.disk_cap)
}

// optional uint64 net_tx_bw = 6;
void ResourceVector::clear_net_tx_bw() {
  net_tx_bw_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ResourceVector::net_tx_bw() const {
  // @@protoc_insertion_point(field_get:firmament.ResourceVector.net_tx_bw)
  return net_tx_bw_;
}
void ResourceVector::set_net_tx_bw(::google::protobuf::uint64 value) {
  
  net_tx_bw_ = value;
  // @@protoc_insertion_point(field_set:firmament.ResourceVector.net_tx_bw)
}

// optional uint64 net_rx_bw = 7;
void ResourceVector::clear_net_rx_bw() {
  net_rx_bw_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ResourceVector::net_rx_bw() const {
  // @@protoc_insertion_point(field_get:firmament.ResourceVector.net_rx_bw)
  return net_rx_bw_;
}
void ResourceVector::set_net_rx_bw(::google::protobuf::uint64 value) {
  
  net_rx_bw_ = value;
  // @@protoc_insertion_point(field_set:firmament.ResourceVector.net_rx_bw)
}

inline const ResourceVector* ResourceVector::internal_default_instance() {
  return &ResourceVector_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace firmament

// @@protoc_insertion_point(global_scope)
