# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: base/reference_desc.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='base/reference_desc.proto',
  package='firmament',
  syntax='proto3',
  serialized_pb=_b('\n\x19\x62\x61se/reference_desc.proto\x12\tfirmament\"\xb4\x03\n\x13ReferenceDescriptor\x12\n\n\x02id\x18\x01 \x01(\x0c\x12:\n\x04type\x18\x02 \x01(\x0e\x32,.firmament.ReferenceDescriptor.ReferenceType\x12<\n\x05scope\x18\x03 \x01(\x0e\x32-.firmament.ReferenceDescriptor.ReferenceScope\x12\x19\n\x11non_deterministic\x18\x04 \x01(\x08\x12\x0c\n\x04size\x18\x05 \x01(\x04\x12\x10\n\x08location\x18\x06 \x01(\t\x12\x13\n\x0binline_data\x18\x07 \x01(\x0c\x12\x16\n\x0eproducing_task\x18\x08 \x01(\x04\x12\x17\n\x0ftime_to_compute\x18\t \x01(\x04\x12\x0f\n\x07version\x18\n \x01(\x04\"Z\n\rReferenceType\x12\r\n\tTOMBSTONE\x10\x00\x12\n\n\x06\x46UTURE\x10\x01\x12\x0c\n\x08\x43ONCRETE\x10\x02\x12\n\n\x06STREAM\x10\x03\x12\t\n\x05VALUE\x10\x04\x12\t\n\x05\x45RROR\x10\x05\")\n\x0eReferenceScope\x12\n\n\x06PUBLIC\x10\x00\x12\x0b\n\x07PRIVATE\x10\x01\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_REFERENCEDESCRIPTOR_REFERENCETYPE = _descriptor.EnumDescriptor(
  name='ReferenceType',
  full_name='firmament.ReferenceDescriptor.ReferenceType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TOMBSTONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FUTURE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONCRETE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STREAM', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VALUE', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ERROR', index=5, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=344,
  serialized_end=434,
)
_sym_db.RegisterEnumDescriptor(_REFERENCEDESCRIPTOR_REFERENCETYPE)

_REFERENCEDESCRIPTOR_REFERENCESCOPE = _descriptor.EnumDescriptor(
  name='ReferenceScope',
  full_name='firmament.ReferenceDescriptor.ReferenceScope',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PUBLIC', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PRIVATE', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=436,
  serialized_end=477,
)
_sym_db.RegisterEnumDescriptor(_REFERENCEDESCRIPTOR_REFERENCESCOPE)


_REFERENCEDESCRIPTOR = _descriptor.Descriptor(
  name='ReferenceDescriptor',
  full_name='firmament.ReferenceDescriptor',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='firmament.ReferenceDescriptor.id', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='firmament.ReferenceDescriptor.type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scope', full_name='firmament.ReferenceDescriptor.scope', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='non_deterministic', full_name='firmament.ReferenceDescriptor.non_deterministic', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size', full_name='firmament.ReferenceDescriptor.size', index=4,
      number=5, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='location', full_name='firmament.ReferenceDescriptor.location', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='inline_data', full_name='firmament.ReferenceDescriptor.inline_data', index=6,
      number=7, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='producing_task', full_name='firmament.ReferenceDescriptor.producing_task', index=7,
      number=8, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='time_to_compute', full_name='firmament.ReferenceDescriptor.time_to_compute', index=8,
      number=9, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='version', full_name='firmament.ReferenceDescriptor.version', index=9,
      number=10, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _REFERENCEDESCRIPTOR_REFERENCETYPE,
    _REFERENCEDESCRIPTOR_REFERENCESCOPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=41,
  serialized_end=477,
)

_REFERENCEDESCRIPTOR.fields_by_name['type'].enum_type = _REFERENCEDESCRIPTOR_REFERENCETYPE
_REFERENCEDESCRIPTOR.fields_by_name['scope'].enum_type = _REFERENCEDESCRIPTOR_REFERENCESCOPE
_REFERENCEDESCRIPTOR_REFERENCETYPE.containing_type = _REFERENCEDESCRIPTOR
_REFERENCEDESCRIPTOR_REFERENCESCOPE.containing_type = _REFERENCEDESCRIPTOR
DESCRIPTOR.message_types_by_name['ReferenceDescriptor'] = _REFERENCEDESCRIPTOR

ReferenceDescriptor = _reflection.GeneratedProtocolMessageType('ReferenceDescriptor', (_message.Message,), dict(
  DESCRIPTOR = _REFERENCEDESCRIPTOR,
  __module__ = 'base.reference_desc_pb2'
  # @@protoc_insertion_point(class_scope:firmament.ReferenceDescriptor)
  ))
_sym_db.RegisterMessage(ReferenceDescriptor)


# @@protoc_insertion_point(module_scope)
